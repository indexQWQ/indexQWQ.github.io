<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/2025/04/25/Linux/"/>
    <url>/2025/04/25/Linux/</url>
    
    <content type="html"><![CDATA[<p>这篇文章是关于Linux的学习笔记</p><h3 id="Linux命令基础格式"><a href="#Linux命令基础格式" class="headerlink" title="Linux命令基础格式"></a>Linux命令基础格式</h3><p>通用格式：<code>command [-options][parameter]</code></p><ul><li><p>command：命令本身</p></li><li><p>-options：[可选择填]命令的一些选项，可以通过选项控制命令的行为细节</p></li><li><p>parameter：[可选择填]命令的参数，大多数用于命令的指向目标</p></li></ul><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h3><p>语法：<code>ls [-a -l -h][Linux路径]</code></p><p>当不使用选项和参数，直接使用命令本体，表示：以平铺的形式，列出当前工作目录下的内容</p><ul><li>HOME目录：每个Linux操作用户在Linux系统的个人账户目录，路径在：&#x2F;home&#x2F;用户名</li></ul><h4 id="a：all的意思，即列出全部文件（包括隐藏的文件-文件夹）"><a href="#a：all的意思，即列出全部文件（包括隐藏的文件-文件夹）" class="headerlink" title="-a：all的意思，即列出全部文件（包括隐藏的文件&#x2F;文件夹）"></a>-a：all的意思，即列出全部文件（包括隐藏的文件&#x2F;文件夹）</h4><img src="/2025/04/25/Linux/-a.png" class=""><p>可以看到图中列出的内容变多了</p><ul><li><p>图中以.开头的，表示是Linux系统的隐藏文件</p></li><li><p>只有通过-a选项才能看到这些隐藏的文件</p></li></ul><h4 id="l：以列表（竖向排列）的形式展示内容，并展示更多信息"><a href="#l：以列表（竖向排列）的形式展示内容，并展示更多信息" class="headerlink" title="-l：以列表（竖向排列）的形式展示内容，并展示更多信息"></a>-l：以列表（竖向排列）的形式展示内容，并展示更多信息</h4><img src="/2025/04/25/Linux/-l.png" class=""><p><em><strong>ls的命令选项的组合使用：</strong></em></p><ul><li><p>ls -l -a</p></li><li><p>ls -la</p></li><li><p>ls -al</p></li></ul><p>上面的三种写法都是一样的，表示同时应用-l和-a的功能</p><p>除了选项本身可以组合以外，选项和参数也可以一起使用。</p><h4 id="h：表示以易于阅读的形式，列出文件大小，如K、M、G"><a href="#h：表示以易于阅读的形式，列出文件大小，如K、M、G" class="headerlink" title="-h：表示以易于阅读的形式，列出文件大小，如K、M、G"></a>-h：表示以易于阅读的形式，列出文件大小，如K、M、G</h4><p>-h与-l搭配一起才能展示文件的大小</p><img src="/2025/04/25/Linux/-h.png" class=""><h3 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h3><p>当Linux终端（命令行）打开的时候，会默认以用户的HOME目录作为当前的工作目录</p><p>我们可以通过cd命令，更改当前所在的工作目录</p><p>cd命令来自：<em><strong>Change Directory</strong></em></p><p>语法：<code>cd [LInux路径]</code></p><ul><li><p>cd命令无需选项，只有参数，表示要切换到哪个目录下</p></li><li><p>cd命令直接执行，不写参数，表示回到用户的HOME目录</p></li></ul><img src="/2025/04/25/Linux/cd.png" class=""><h3 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h3><p>通过ls来验证当前的工作目录，其实是不恰当的</p><p>我们可以通过pwd命令，来查看当前所在的工作目录</p><p>pwd命令来自：<em><strong>Print Work Directory</strong></em></p><p>语法：pwd</p><ul><li>pwd命令，无选项，无命令，直接输入即可</li></ul><img src="/2025/04/25/Linux/pwd.png" class=""><h3 id="相对路径和绝对路径"><a href="#相对路径和绝对路径" class="headerlink" title="相对路径和绝对路径"></a>相对路径和绝对路径</h3><p>cd &#x2F;home&#x2F;index&#x2F;Desktop    绝对路径</p><img src="/2025/04/25/Linux/%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84.png" class=""><p>cd Desktop</p><img src="/2025/04/25/Linux/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84.png" class=""><p>绝对路径：以根目录为起点，描述路径的一种写法，路径描述以&#x2F;开头</p><p>相对路径：以当前目录为起点，描述路径的一种写法，路径描述无需以&#x2F;开头</p><h3 id="特殊路径符"><a href="#特殊路径符" class="headerlink" title="特殊路径符"></a>特殊路径符</h3><p>如果当前处于：&#x2F;home&#x2F;index&#x2F;Desktop</p><p>想要，向上回退一级，切换到&#x2F;home&#x2F;index中，怎么办呢？</p><ul><li><p>可以通过cd，即可以回到home目录</p></li><li><p>也可以通过特殊路径符来完成</p><ul><li><p>.  表示当前目录，比如cd .&#x2F;Desktop表示切换到当前目录下的Desktop目录内，和cd Desktop效果一致</p></li><li><p>.. 表示上一级目录，比如：cd .. 即可切换到上一级目录，cd ..&#x2F;.. 切换到上二级的目录</p></li><li><p>~ 表示home目录，cd ~ 即可切换到home目录 或 cd ~&#x2F;Desktop，切换到home内的Desktop目录</p></li></ul></li></ul><h3 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h3><p>通过mkdir命令可以创建新的目录（文件夹）</p><p>mkdir来自英文：<em><strong>Make Directory</strong></em></p><p>语法：<code>mkdir [-p] Linux路径</code></p><ul><li>-p可选填，表示自动创建不存在的父目录，适用于创建连续多层级的目录</li></ul><img src="/2025/04/25/Linux/mkdir-p.png" class=""><ul><li>Linux表示要创建的文件夹的路径</li></ul><img src="/2025/04/25/Linux/mkdir.png" class=""><h3 id="touch-cat-more命令"><a href="#touch-cat-more命令" class="headerlink" title="touch-cat-more命令"></a>touch-cat-more命令</h3><h4 id="touch创建文件"><a href="#touch创建文件" class="headerlink" title="touch创建文件"></a>touch创建文件</h4><p>可以通过touch命令创建文件</p><p>语法：touch Linux路径</p><h4 id="cat查看文件内容"><a href="#cat查看文件内容" class="headerlink" title="cat查看文件内容"></a>cat查看文件内容</h4><p>有了文件后，我们可以通过cat命令查看文件的内容</p><p>不过，现在我们还没有学习vi编辑器，无法向文件内进行编辑内容，所以暂时我们只能通过图形化手动向文件内添加内容，来测试cat命令</p><img src="/2025/04/25/Linux/cat.png" class=""><h4 id="more查看文件内容"><a href="#more查看文件内容" class="headerlink" title="more查看文件内容"></a>more查看文件内容</h4><p>more于cat的不同在于：</p><ul><li><p>cat是直接将内容全部显示出来</p></li><li><p>more支持翻页，如果文件的内容过多，可以一页一页的显示</p></li></ul><p>语法：<code>more Linux路径</code></p><p>Linux系统内置有一个文件，路径为：&#x2F;etc&#x2F;services，可以使用more命令查看</p><p>more &#x2F;etc&#x2F;services</p><ul><li><p>在查看过程中通过空格来翻页</p></li><li><p>通过q退出</p></li></ul><h3 id="cp-mv-rm命令"><a href="#cp-mv-rm命令" class="headerlink" title="cp-mv-rm命令"></a>cp-mv-rm命令</h3><h4 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h4><p>用于复制文件文件夹，cp命令来自英文单词：copy</p><p>语法：<code>cp [-r] 参数1 参数2</code></p><ul><li>-r选项，可选，用于复制文件夹使用，表示递归</li></ul><img src="/2025/04/25/Linux/cp-r.png" class=""><ul><li><p>参数1，Linux路径，表示被复制的文件或文件夹</p></li><li><p>参数2，Linux路径，表示要复制去的地方</p></li></ul><img src="/2025/04/25/Linux/cp.png" class=""><h4 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h4><p>用于移动文件&#x2F;文件夹，来自英文：move</p><p>语法：<code>mv 参数1 参数2</code></p><ul><li><p>参数1，Linux路径，表示被移动的文件或文件夹</p></li><li><p>参数2，Linux路径，表示要移动去的地方，如果目标不存在，则进行改名，确保目标存在</p></li></ul><img src="/2025/04/25/Linux/mv.png" class=""><h4 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h4><p>用于删除文件&#x2F;文件夹，来自英文单词：remove</p><p>语法：<code>rm [-r -f] 参数1 参数2 ...... 参数n</code></p><ul><li><p>同cp命令一样，-r选项用于删除文件夹</p></li><li><p>-f表示force，强制删除（不会弹出提示确认信息）</p><ul><li><p>普通用户删除内容不会弹出提示，只有root管理员用户删除内容会有提示</p></li><li><p>所以一般普通用户用不到-f选项</p><p>可以通过su - root，输入用户密码进入root用户，通过exit退回普通用户。</p><img src="/2025/04/25/Linux/rm-f.png" class=""></li></ul></li><li><p>参数1、参数2、······、参数n 表示要删除的文件&#x2F;文件夹路径，按照空格隔开</p></li></ul><p>rm命令支持通配符*，用来做模糊匹配</p><p>符号*表示通配符，即匹配任意内容（包含空），示例：</p><ul><li><p>test*，表示匹配任何以test开头的内容</p></li><li><p>*test，表示匹配任何以test结尾的内容</p></li><li><p>*test *，表示匹配任何包含test的内容</p></li></ul><p>演示：删除所有以test开头的文件&#x2F;文件夹</p><img src="/2025/04/25/Linux/rm.png" class=""><p>警告：rm是一个危险的命令，特别是在处于root用户的时候，要谨慎使用。</p><p>如下命令，请不要在root用户下执行：<code>rm -rf /</code>  <code>rm -rf /*</code>效果等同于在windows上执行c盘格式化。</p><h3 id="which-find命令"><a href="#which-find命令" class="headerlink" title="which-find命令"></a>which-find命令</h3><h4 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h4><p>我们在前面学习的Linux命令，其实他们的本质就是一个个的二进制可执行程序。</p><p>和Windows系统中的.exe文件是一个意思。</p><p>通过which命令，查看所使用的一系列命令的程序文件放在哪里</p><p>语法：<code>which 要查找的命令</code></p><img src="/2025/04/25/Linux/which.png" class=""><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><p>在Linux系统中，我们可以通过find命令去搜索指定的文件。</p><p>语法：<code>find 起始路径 -name &quot;被查找的文件名&quot;</code></p><p>为了确保后续演示，拥有最大的权限，可以切换到root用户，执行命令：<code>su - root</code></p><img src="/2025/04/25/Linux/find1.png" class=""><p>被查找的文件名，支持使用通配符*来做模糊查询。</p><p>按文件大小查找文件</p><p>语法：<code>find 起始位置 -size +|-n[kMG]</code></p><ul><li><p>+、-表示大小和小于</p></li><li><p>n表示大小数字</p></li><li><p>kMG表示大小单位，k（小写字母）表示kb、M表示MB、G表示GB</p></li></ul><p>示例：</p><ul><li><p>查找小于10kB的文件：<code>find / -size -10k</code></p></li><li><p>查找大于100MB的文件：<code>find / -size +100M</code></p></li><li><p>查找大于1GB的文件：<code>find / -size +1G</code></p></li></ul><p>提示：用Ctrl + c可以停止搜索</p><img src="/2025/04/25/Linux/find-size.png" class=""><h3 id="grep-wc-管道符命令"><a href="#grep-wc-管道符命令" class="headerlink" title="grep-wc-管道符命令"></a>grep-wc-管道符命令</h3><h4 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h4><p>从文件中通过关键字过滤文件行</p><p>语法：<code>grep [-n] 关键字 文件路径</code></p><ul><li><p>选项-n，可选，表示在结果中显示匹配的行的行号</p></li><li><p>参数，关键字，必填，表示过滤的关键字，带有空格或其它特殊符号，建议使用 “ ”将关键字包围起来</p></li><li><p>参数，文件路径，必填，表示要过滤内容的文件路径，<u>可作为内容输入端口</u></p></li></ul><h4 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h4><p>用来统计文件的行数、单词数量等</p><p>语法：<code>wc [-c -m -l -w] 文件路径</code></p><ul><li><p><em>-c</em>，统计bytes数量</p></li><li><p><em>-m</em>，统计字符数量</p></li><li><p><em>-l</em>，统计行数</p></li><li><p><em>-w</em>，统计单词数量</p></li><li><p>参数，文件路径，被统计的文件，<u>可以作为内容的输入端口</u></p></li></ul><h4 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h4><p>管道符：|</p><p>含义：将管道符左边命令的结果，作为右边命令的输入</p><h3 id="echo-tail-重定向符命令"><a href="#echo-tail-重定向符命令" class="headerlink" title="echo-tail-重定向符命令"></a>echo-tail-重定向符命令</h3><h4 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h4><p>在命令行中输出指定的内容</p><p>语法：<code>echo &quot;输出的内容&quot;</code></p><ul><li>无需选项，只有一个参数，表示要输出的内容，复杂内容可以用” “包裹</li></ul><p>看如下命令：<code>echo pwd</code></p><p>本意是想，输出当前的工作路径，但是pwd被作为普通字符输出了</p><p>这个时候我们可以通过反引号将pwd包围，从而使pwd被作为命令执行，而非普通字符</p><img src="/2025/04/25/Linux/echo.png" class=""><h4 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h4><p>可以查看文件尾部的命令内容，跟踪文件的最新更改</p><p>语法：tail [-f -num] Linux路径</p><ul><li><p>参数，Linux路径，表示被跟踪的文件路径</p></li><li><p>选项，-f，表示持续跟踪     CTRL+c可以停止跟踪    按键盘的上键可以找到上次输入的命令</p></li><li><p>选项，-num，表示尾部多少行，不填默认10行，num是要填的数字</p></li></ul><h4 id="重定向符"><a href="#重定向符" class="headerlink" title="重定向符"></a>重定向符</h4><p>重定向符：&gt;和&gt;&gt;</p><ul><li><p>’&gt;‘，将左侧的命令的结果，<u><strong>覆盖</strong></u>写入到符号右侧的指定的文件中</p></li><li><p>‘&gt;&gt;’，将左侧命令的结果，<u><strong>追加</strong></u>写入到符号右侧指定的文件中</p></li></ul><p>具体可看以下内容</p><img src="/2025/04/25/Linux/echo2.png" class=""><h3 id="vi编辑器"><a href="#vi编辑器" class="headerlink" title="vi编辑器"></a>vi编辑器</h3><h4 id="vi-vim编辑器介绍"><a href="#vi-vim编辑器介绍" class="headerlink" title="vi\vim编辑器介绍"></a>vi\vim编辑器介绍</h4><p>vi\vim是visual interface的简称，是Linux中最经典的文本编辑器</p><p>同图形化界面中的文本编辑器一样，vi是命令行下对文本文件进行编辑的绝佳选择。</p><p><strong>vim是vi的加强版本，兼容vi的所有指令，不仅可以编辑文本，而且还具有shell程序编辑的功能，可以用不同颜色的字体来辨别语法的正确性，极大方便了程序的设计和编辑性。</strong></p><h4 id="vi-vim编辑器的三种工作模式"><a href="#vi-vim编辑器的三种工作模式" class="headerlink" title="vi\vim编辑器的三种工作模式"></a>vi\vim编辑器的三种工作模式</h4><ul><li><p><strong>命令模式（command mode）</strong></p><p>命令模式下，所写的编辑器都理解为命令，以命令驱动执行不同的功能。</p><p>此模式下不能自由进行文本编辑。</p></li><li><p><strong>输入模式（insert mode）</strong></p><p>此模式下可以对文件进行自由编辑。</p></li><li><p><strong>底线命令模式（last line mode）</strong></p><p>以：开始，通常用于文件的保存、退出。</p></li></ul><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><p>如果需要通过vi&#x2F;vim编辑器编辑文件，可以通过以下命令：</p><p><code>vi 文件路径</code></p><p><code>vim 文件路径</code></p><ul><li><p>如果文件路径表示的文件不存在，那么此命令会用于编辑新文件</p></li><li><p>如果文件路径表示的文件存在，那么此命令用于编辑已有的文件</p></li></ul><h4 id="vi编辑器的快速体验"><a href="#vi编辑器的快速体验" class="headerlink" title="vi编辑器的快速体验"></a>vi编辑器的快速体验</h4><p>通过vi&#x2F;vim命令编辑文件，会打开一个新的窗口，此时这个窗口就是：命令模式窗口</p><p>命令模式是vi编辑器的入口和出口，如右图                        <img src="/2025/04/25/Linux/vim%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F.png" class=""></p><ul><li><p>进入vi编辑器会进入命令模式</p></li><li><p>通过命令模式输入键盘指令，可以进入输入模式</p></li><li><p>输入模式需要退回到命令模式，然后通过命令可以进入底线命令模式</p></li></ul><p>补充：CTRL+c也可以从输入模式退回到命令模式</p><h4 id="命令模式的快捷键"><a href="#命令模式的快捷键" class="headerlink" title="命令模式的快捷键"></a>命令模式的快捷键</h4><p>下面是命令模式中常见的快捷键</p><img src="/2025/04/25/Linux/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E5%BF%AB%E6%8D%B7%E9%94%AE.png" class=""><img src="/2025/04/25/Linux/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E5%BF%AB%E6%8D%B7%E9%94%AE2.png" class=""><img src="/2025/04/25/Linux/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E5%BF%AB%E6%8D%B7%E9%94%AE3.png" class=""><h4 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h4><p>通过Esc，退回到命令模式，再输入：，就可以进入到底线命令模式</p><img src="/2025/04/25/Linux/%E5%BA%95%E7%BA%BF%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.png" class=""><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="Linux的root用户"><a href="#Linux的root用户" class="headerlink" title="Linux的root用户"></a>Linux的root用户</h3><h4 id="root用户"><a href="#root用户" class="headerlink" title="root用户"></a>root用户</h4><p>无论是Windows、Mac OS、Linux均采用多用户的管理模式进行权限管理</p><p>而在Linux系统中，拥有最大权限的账户名为root（超级管理员）</p><p>root用户拥有最大的系统操作权限，而普通用户在许多地方是受限制的</p><p>例如：在根目录下创建文件夹只有root用户可以</p><p>由此可见普通用户的权限一般在home目录内是不受限制的</p><h4 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h4><p>su命令就是用于账户切换的系统命令，其来源于英文：Switch User</p><p>语法：<code>su [-] [用户名]</code></p><ul><li><p>-符号是可选的，表示是否在切换用户后加载环境变量（后面有），<strong>建议带上</strong></p></li><li><p>参数：用户名，表示要切换的用户，用户名可以省略，省略表示要切换到root</p></li><li><p>切换到用户后，可以通过exit命令退回上一个用户，也可以使用快捷键：CTRL+d</p></li><li><p>使用普通用户，切换到其他用户需要输入密码，如切换到root用户</p></li><li><p>使用root用户切换到其它用户不需要密码，可以直接切换</p></li></ul><h4 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h4><p>不建议长期使用root用户，避免带来系统损坏。</p><p>为此我们以使用sudo命令，为普通的命令授权，临时以root身份执行。</p><p>语法：<code>sudo 命令</code></p><ul><li><p>在其它命令前，带上sudo，即可为这一条命令临时赋予root授权</p></li><li><p>但是并不是所有的用户，都有权利使用sudo，我们需要为<u>普通用户配置sudo认证</u></p></li></ul><h5 id="为普通用户配置sudo认证"><a href="#为普通用户配置sudo认证" class="headerlink" title="为普通用户配置sudo认证"></a>为普通用户配置sudo认证</h5><ul><li><p>切换到root用户，执行visudo命令，会自动通过vi编辑器打开：&#x2F;etc&#x2F;sudoers</p></li><li><p>在文件最后添加：</p><p><code>用户名 ALL=(ALL)    NOPASSWD:ALL</code></p><ul><li>其中最后的NOPASSWD:ALL表示使用sudo命令，无需输入密码</li></ul></li><li><p>最后通过wq保存</p></li><li><p>切换回普通用户</p><img src="/2025/04/25/Linux/sudo.png" class=""></li></ul><h3 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h3><h4 id="用户和用户组的概念"><a href="#用户和用户组的概念" class="headerlink" title="用户和用户组的概念"></a>用户和用户组的概念</h4><p>Linux系统中可以：</p><ul><li><p>配置多个用户</p></li><li><p>配置多个用户组</p></li><li><p>用户可以加入到多个用户组中</p></li></ul><p>Linux中关于权限的管控级别有两个级别，分别是：</p><ul><li><p>针对用户的权限控制</p></li><li><p>针对用户组的权限控制</p></li></ul><p>比如，针对某文件，可以控制用户的权限，也可以控制用户组的权限。</p><h4 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h4><p>以下命令需要root用户执行</p><ul><li>创建用户组</li></ul><p>        <code>groupadd 用户组名</code></p><ul><li>删除用户组</li></ul><p>        <code>groupdel 用户组名</code></p><h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><p>以下命令需要root用户执行</p><ul><li><p>创建用户</p><p><code>useradd [-g -d] 用户名</code></p><ul><li><p>-g指定用户的组，不指定-g，会创建同名组并自动加入，指定-g需要组已经存在，如已存在同名组，必须使用-g</p></li><li><p>-d指定用户HOME路径，不指定，HOME目录默认在：&#x2F;home&#x2F;用户名</p></li></ul></li><li><p>删除用户</p><p><code>userdel [-r] 用户名</code></p><ul><li>-r可以删除用户的HOME目录，不使用-r删除用户时，HOME目录保存</li></ul></li><li><p>查看用户所属组</p><p><code>id  [ 用户名]</code></p><ul><li>参数：用户名，被查看的用户，如果不提供则查看自身</li></ul></li><li><p>修改用户所属组</p><p><code>usermod -aG 用户组 用户名</code></p><p>将指定用户加入指定用户组</p></li></ul><h4 id="getent命令"><a href="#getent命令" class="headerlink" title="getent命令"></a>getent命令</h4><p>可以查看当前系统中有哪些用户</p><p>语法：<code>getent passwd</code></p><img src="/2025/04/25/Linux/getent.png" class=""><img src="/2025/04/25/Linux/getent1.png" class=""><p>每个用户共有6个信息</p><p>用户名：密码(x):用户ID:组ID:描述信息(无用):HOME目录:执行终端(默认bash)</p><p>也可以查看当前系统中有哪些用户组</p><p>语法：<code>getent group</code></p><img src="/2025/04/25/Linux/getentgroup.png" class=""><img src="/2025/04/25/Linux/getentgroup2.png" class=""><h3 id="查看权限控制信息"><a href="#查看权限控制信息" class="headerlink" title="查看权限控制信息"></a>查看权限控制信息</h3><h4 id="查看Linux文件的权限管控信息"><a href="#查看Linux文件的权限管控信息" class="headerlink" title="查看Linux文件的权限管控信息"></a>查看Linux文件的权限管控信息</h4><p>通过ls -l可以以列表的形式查看内容，并显示权限细节</p><img src="/2025/04/25/Linux/%E6%9D%83%E9%99%90%E7%BB%86%E8%8A%82.png" class=""><ul><li><p>序号1，表示文件、文件夹的权限控制信息</p></li><li><p>序号2，表示文件、文件夹所属用户</p></li><li><p>序号3，表示文件、文件夹所属用户组</p></li></ul><h4 id="认知权限信息"><a href="#认知权限信息" class="headerlink" title="认知权限信息"></a>认知权限信息</h4><p>解释序号1，权限细节</p><p>权限细节总共分为10个槽位</p> <img src="/2025/04/25/Linux/%E6%9D%83%E9%99%90%E4%BF%A1%E6%81%AF.png" class=""><p>举例：drwxr-xr-x，表示：</p><ul><li><p>首字母d表示这是一个文件夹</p></li><li><p>所属用户是权限是：有r有w有x，rwx</p></li><li><p>所属用户组的权限是：有r无w有x，r-x（-表示无此权限）</p></li><li><p>其它用户的权限是：有r无w有x，r-x</p></li></ul><h4 id="rwx"><a href="#rwx" class="headerlink" title="rwx"></a>rwx</h4><ul><li><p>r表示读权限</p></li><li><p>w表示写权限</p></li><li><p>x表示执行权限</p></li></ul><p>针对不同的文件和文件夹，rwx的含义有细微的区别</p><ul><li><p>r，针对文件可以查看文件内容</p><ul><li>针对文件夹可以查看文件夹的内容，如ls命令</li></ul></li><li><p>w，针对文件表示可以修改此文件</p><ul><li>针对文件夹，可以在文件夹内：创建、删除、改名等操作</li></ul></li><li><p>x，针对文件表示可以将文件作为程序执行</p><ul><li>针对文件夹，表示可以更改工作目录到此文件夹，即cd进入</li></ul></li></ul><h3 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h3><p>用于修改文件或文件夹的权限信息。</p><p>注意：只有文件、文件夹的所属用户或root用户可以修改</p><p>语法：<code>chmod [-R] 权限 文件/文件夹</code></p><ul><li>选项：-R，对文件夹内的全部内容应用同样的操作</li></ul><p>示例：</p><ul><li><p>chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;x hello.txt，将文件权限修改为：rwxr-x–x</p><ul><li>其中：u表示user所属用户权限，g表示group组权限，o表示other其它用户权限</li></ul></li><li><p>chmod -R u&#x3D;rwx,g&#x3D;rx,o&#x3D;x test，将文件夹test以及文件夹内全部内容权限设置为：rwxr-x–x</p></li></ul><p>除此之外，还有快捷写法：chmod 751 test.txt</p><p>将test.txt的权限修改为751</p><p>权限可以用3位数字来代表，3位数字从左到右分别表示用户、用户组、其他用户的权限。</p><p>数字的细节如下：r记作4、w记作2、x记作1，可以有：</p><ul><li><p>0：—</p></li><li><p>1：–x</p></li><li><p>2：-w-</p></li><li><p>3：-wx</p></li><li><p>4：r–</p></li><li><p>5：r-x</p></li><li><p>6：rw-</p></li><li><p>7：rwx</p></li></ul><p>所以751表示rwx r-x –x</p><h3 id="chown命令"><a href="#chown命令" class="headerlink" title="chown命令"></a>chown命令</h3><p>可以用于修改文件、文件夹的所属用户和用户组</p><p>注意：普通用户无法修改所属为其它用户或组，所以此命令只适用于root用户执行</p><p>语法：<code>chown [-R] [ 用户][:][用户组] 文件或文件夹</code></p><ul><li><p>选项，-R，同chmod，对文件夹内全部内容应用相同规则</p></li><li><p>选项，用户，修改所属用户</p></li><li><p>选项，用户组，修改所属用户组</p></li><li><p>：用于分隔用户和用户组</p></li></ul><p>示例：</p><ul><li><p>chown root hello.txt，将hello.txt所属用户修改为root</p></li><li><p>chown :root hello.txt，将hello.txt所用户组修改为root</p></li><li><p>chown root:index hello.txt，将hello.txt所属用户修改为root，用户组修改为index</p></li><li><p>chown -R root test，将文件夹test的所属用户修改为root并对文件夹内全部内容应用同样规则</p></li></ul><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="小技巧快捷键"><a href="#小技巧快捷键" class="headerlink" title="小技巧快捷键"></a>小技巧快捷键</h3><h4 id="CTRL-c强制停止"><a href="#CTRL-c强制停止" class="headerlink" title="CTRL+c强制停止"></a>CTRL+c强制停止</h4><ul><li><p>Linux某些程序的运行，如果想要强制停止它，可以使用快捷键CTRL+c</p></li><li><p>命令输入错误，也可以通过它来退出当前输入，重新输入</p></li></ul><h4 id="CTRL-d退出或登出"><a href="#CTRL-d退出或登出" class="headerlink" title="CTRL+d退出或登出"></a>CTRL+d退出或登出</h4><ul><li><p>可以通过它退出账户</p></li><li><p>或者退出某些特定程序的专属页面</p></li></ul><p>注意：不能用于退出vi&#x2F;vim</p><h4 id="历史命令搜索"><a href="#历史命令搜索" class="headerlink" title="历史命令搜索"></a>历史命令搜索</h4><ul><li><p>可以通过history命令，查看历史输入过的命令</p><img src="/2025/04/25/Linux/history.png" class=""></li><li><p>可以通过：！命令前缀，自动执行上一次匹配前缀的命令</p><img src="/2025/04/25/Linux/history.png" class=""></li><li><p>可以通过快捷键：CTRL+r，输入内容去匹配历史命令</p><p>如果搜索到你内容是你需要的，那么：</p><ul><li><p>按回车键可以直接执行</p></li><li><p>键盘左右键可以得到此命令（不执行）</p></li></ul></li></ul><h4 id="光标移动快捷键"><a href="#光标移动快捷键" class="headerlink" title="光标移动快捷键"></a>光标移动快捷键</h4><ul><li><p>ctrl+a，跳到命令开头</p></li><li><p>ctrl+e，跳到命令结尾</p></li><li><p>ctrl+键盘左键，向左跳一个单词</p></li><li><p>ctrl+键盘右键，向右跳一个单词</p></li></ul><h4 id="清屏"><a href="#清屏" class="headerlink" title="清屏"></a>清屏</h4><ul><li><p>通过ctrl+l，可以清空终端内容</p></li><li><p>或通过命令clear也可以</p></li></ul><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><h4 id="Linux系统的应用商店"><a href="#Linux系统的应用商店" class="headerlink" title="Linux系统的应用商店"></a>Linux系统的应用商店</h4><p>操作系统安装软件有许多种形式，一般分为：</p><ul><li><p>下载安装包自行安装</p><ul><li><p>如win系统使用exe文件、msi文件等</p></li><li><p>如mac系统使用dmg文件、pkg文件等</p></li></ul></li><li><p>系统的应用商店内安装</p><ul><li><p>如win系统有Microsoft Store商店</p></li><li><p>如mac系统有AppStore商店</p></li></ul></li></ul><p>Linux系统同样支持这两种方式，首先学习使用：Linux命令行内的“应用商店”，yum命令安装软件</p><h4 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h4><p>yum：RPM包软件管理器，用于自动化安装配置Linux软件，并可以自动解决依赖问题。</p><p>语法：<code>yum [-y] [install | remove | search] 软件名称</code></p><ul><li><p>选项：-y，自动确认，无需手动确认安装或卸载过程</p></li><li><p>install：安装</p></li><li><p>remove：卸载</p></li><li><p>search：搜索</p></li></ul><p>yum命令需要root权限，并且需要联网</p><p>示例：</p><ul><li><p>yum [-y] install wget,通过yum命令安装wget程序</p></li><li><p>yum [-y] remove wget，通过yum命令卸载wget</p></li><li><p>yum search wget，通过yum命令，搜索是否有wget安装包</p></li></ul><h4 id="apt命令-扩展"><a href="#apt命令-扩展" class="headerlink" title="apt命令-扩展"></a>apt命令-扩展</h4><p>前面学习的各类Linux命令，都是通用的。但是软件安装，Centos系统和Ubuntu系统是使用不同的包管理器。</p><p>centos使用yum管理器，ubuntu使用apt管理器</p><p>通过前面学习的WSL环境，我们可以得到ubuntu运行环境。</p><p>语法：<code>apt [-y] [install | remove |search] 软件名称</code></p><p>用法和yum一致，同样需要root权限</p><ul><li><p>apt install wget，安装wget</p></li><li><p>apt remove wget，卸载wget</p></li><li><p>apt search wget，搜索wget</p></li></ul><h3 id="systemctl命令"><a href="#systemctl命令" class="headerlink" title="systemctl命令"></a>systemctl命令</h3><p>Linux系统很多软件（内置的包括第三方）均支持使用systemctl命令控制：启动、停止、开机自启能被systemctl管理的软件，一般也称之为：服务</p><p>语法：<code>systemctl start | stop | status | enable | disable 服务名</code></p><ul><li><p>start 启动</p></li><li><p>stop 关闭</p></li><li><p>status 查看状态</p></li><li><p>enable 开启开机自启</p></li><li><p>disable 关闭开机自启</p></li></ul><p>系统内置的服务比较多，比如：</p><ul><li><p>NetworkManager，主网络服务</p></li><li><p>network，副网络服务</p></li><li><p>firewalld，防火墙服务</p></li><li><p>sshd，ssh服务</p></li></ul><p>除了内置的服务以外，部分第三方软件安装后也可以以systemctl进行控制。</p><ul><li>yum install -y ntp，安装ntp软件</li></ul><p>可以通过ntpd服务名，配合systemctl进行控制</p><ul><li>yum install -y httpd，安装apache服务器软件</li></ul><p>可以通过httpd服务名，配合systemctl进行控制</p><p>注意：部分软件安装后没有自动集成到systemctl中，我们可以手动添加。</p><h3 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h3><h4 id="ln命令"><a href="#ln命令" class="headerlink" title="ln命令"></a>ln命令</h4><p>在系统中创建软链接，可以将文件、文件夹链接到其它位置。</p><p>类似Windows系统中的《快捷方式》</p><p>语法：<code>ln -s 参数1 参数 2</code></p><ul><li><p>-s选项，创建软链接</p></li><li><p>参数1：被链接的文件&#x2F;文件夹</p></li><li><p>参数2：要链接去的目的地</p></li></ul><p>实列：</p><ul><li><p>ln -s &#x2F;etc&#x2F;yum.conf ~&#x2F;yum.conf</p></li><li><p>ln -s &#x2F;etc&#x2F;yum ~&#x2F;yum</p></li></ul><h3 id="时间和时区"><a href="#时间和时区" class="headerlink" title="时间和时区"></a>时间和时区</h3><h4 id="date命令"><a href="#date命令" class="headerlink" title="date命令"></a>date命令</h4><p>通过date命令可以在命令行中查看系统时间</p><p>语法：<code>date [-d] [+格式化字符串]</code></p><ul><li><p>-d按照给定的字符串显示日期，一般用于日期计算</p><ul><li><p>其中支持的时间标记为：</p><ul><li><p>year</p></li><li><p>month</p></li><li><p>day</p></li><li><p>hour</p></li><li><p>minute</p></li><li><p>second</p></li></ul></li><li><p>-d选项也能和格式化字符串配合使用</p></li></ul></li><li><p>格式化字符串：通过特定的字符串标记，来控制显示的日期格式</p><ul><li><p>%Y 年</p></li><li><p>%y 年份后两位数字</p></li><li><p>%m 月份 </p></li><li><p>%d 日</p></li><li><p>%H 小时</p></li><li><p>%M 分钟</p></li><li><p>%S 秒</p></li><li><p>%s 自 1970-01-01 00:00:00 UTC 到现在的秒数</p></li></ul></li></ul><p>示例：</p><ul><li><p>使用date命令本体，无选项，直接查看时间</p><img src="/2025/04/25/Linux/date.png" class=""></li></ul><p>我们也可以通过格式化字符串自定义显示格式</p><ul><li><p>按照2022-01-01的格式显示日期</p><img src="/2025/04/25/Linux/date2.png" class=""></li><li><p>按照2022-01-01 10:00:00的格式显示日期</p><img src="/2025/04/25/Linux/date3.png" class=""></li></ul><p>注意：由于命令中间带有空格，所以使用双引号包围格式化字符串，作为整体。</p><h4 id="修改Linux时区"><a href="#修改Linux时区" class="headerlink" title="修改Linux时区"></a>修改Linux时区</h4><p>一般通过date查看的日期时间是不准确的，这是因为：系统默认时区非中国的东八区</p><p>使用root权限，执行下面命令，修改时区为东八区时区</p><p><code>rm -f /etc/localtime</code></p><p><code>sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></p><p>将系统的自带的localtime文件删除，并将&#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai文件链接为localtime文件即可</p><h4 id="ntp程序"><a href="#ntp程序" class="headerlink" title="ntp程序"></a>ntp程序</h4><p>也可以通过ntp程序自动校准系统时间 </p><p>安装ntp:<code>yum -y install ntp</code></p><p> 启动并设置开机自启：</p><ul><li><p><code>systemctl start ntpd</code></p></li><li><p>&#x2F;<code>systemctl enable ntpd</code></p></li></ul><p>当ntpd启动后会定期的帮助我们联网校准系统时间</p><ul><li>也可以手动校准（需root权限）：<code>ntpdate -u ntp.aliyun.com</code></li></ul><p>通过阿里云提供的服务网址配合ntpdate命令（安装ntp后会附带的命令）自动校准</p><h3 id="IP地址和主机名"><a href="#IP地址和主机名" class="headerlink" title="IP地址和主机名"></a>IP地址和主机名</h3><h4 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h4><p>每一台联网的电脑都会有一个地址，用于和其它计算机进行通迅</p><p>IP地址主要有2个版本，V4版本和V6版本</p><p>IPv4版本的地址格式是: a.b.c.d，其中abcd表示0~225的数字，如192.168.88.101就是一个标准的IP地址</p><p>可以通过命令：<code>ifconfig</code>，查看本机的ip地址，如果无法使用ifconfig命令，可以安装：<code>yum -y install net-tools</code></p><h4 id="特殊IP地址"><a href="#特殊IP地址" class="headerlink" title="特殊IP地址"></a>特殊IP地址</h4><p>除了标准的IP地址以外，还有几个特殊的IP地址需要我们了解：</p><ul><li><p>127.0.0.1 这个IP地址用于指代本机</p><img src="/2025/04/25/Linux/IP.png" class=""></li><li><p>0.0.0.0，特殊IP地址</p><ul><li><p>可以用于指代本机</p></li><li><p>可以在端口绑定中用来确定绑定关系</p></li><li><p>在一些IP地址限制中，可以表示所有IP的意思，如放行规则设置为0.0.0.0，表示允许任意IP访问</p></li></ul></li></ul><h4 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h4><p>每台电脑除了IP地址外，也可以有一个名字，称为主机名，无论是Windows或Linux系统，都可以给系统设置主机名</p><ul><li><p>Linux可以通过命令：<code>hostname</code>查看主机名</p></li><li><p>还可以使用：hostnamectl set-hostname 主机名，修改主机名（root权限）</p></li></ul><h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><p>ip地址难以记忆，有没有什么办法可以通过主机名或替代的字符地址去代替数字化的ip地址</p><p>实际上，我们一直都是通过字符化的地址去访问服务器，很少指定ip地址</p><p>比如，我们在浏览器内输入：<a href="http://www.baidu.com/">www.baidu.com</a> ，会打开百度的网址</p><p>这其中的<a href="http://www.baidu.com，是百度的网址，我们称之为：域名">www.baidu.com，是百度的网址，我们称之为：域名</a></p><img src="/2025/04/25/Linux/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90.png" class=""><p>即：</p><ul><li><p>先查看本机是否有记录（私人地址本）</p><ul><li><p>windows看：C:\WIndows\System32\drivers\etc\hosts</p></li><li><p>Linux看：&#x2F;etc&#x2F;hosts</p></li></ul></li><li><p>再联网去DNS服务器询问是否有记录（如114.114.114.114，8.8.8.8等）</p></li></ul><h4 id="配置主机名映射"><a href="#配置主机名映射" class="headerlink" title="配置主机名映射"></a>配置主机名映射</h4><p>比如，我们finalshell是通过ip地址连接到LInux服务器，那有没有可能通过域名（主机名）连接呢？</p><p>实际上是可以的，我们只需要在windows系统的：C:\WIndows\System32\drivers\etc\hosts文件中配置记录即可</p><h3 id="配置Linux固定的IP"><a href="#配置Linux固定的IP" class="headerlink" title="配置Linux固定的IP"></a>配置Linux固定的IP</h3><h4 id="为什么需要固定的IP"><a href="#为什么需要固定的IP" class="headerlink" title="为什么需要固定的IP"></a>为什么需要固定的IP</h4><p>当前我们虚拟机的Linux操作系统，其IP地址是通过DHCP服务获取的。</p><p>DHcp：动态获取IP地址，即每次重启设备后都会获取一次，可能导致IP地址频繁变更</p><p>原因1：办公电脑IP地址变化无所谓，但是我们要远程连接到Linux系统，如果IP地址经常变换我们修改配置很麻烦</p><p>原因2：在配置虚拟机ip和主机名的映射中，如果ip频繁更改，我们也需要频繁更新映射关系</p><h4 id="在VMware-Workstation中配置固定IP"><a href="#在VMware-Workstation中配置固定IP" class="headerlink" title="在VMware Workstation中配置固定IP"></a>在VMware Workstation中配置固定IP</h4><p>两大步骤：</p><ul><li><p>在VMware Workstation中配置ip地址网关和网段</p><img src="/2025/04/25/Linux/ip1.png" class=""><img src="/2025/04/25/Linux/ip2.png" class=""></li><li><p>在Linux系统中手动修改配置文件，固定IP</p><p>在Linux系统中修改固定ip</p><p>使用vim编辑<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code>文件，填入以下内容：</p><img src="/2025/04/25/Linux/ip3.png" class=""><p>执行：systemctl restart network重启网卡，执行ifconfig即可看到ip固定为192.168.88.88</p></li></ul><h3 id="网络请求和下载"><a href="#网络请求和下载" class="headerlink" title="网络请求和下载"></a>网络请求和下载</h3><h4 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h4><p>检查指定的网络服务是否是可联通状态</p><p>语法：<code>ping [-c num] ip或主机名</code></p><ul><li><p>选项：-c，检查的次数，不使用-c选项，将无限次数持续检查</p></li><li><p>参数：ip或主机名，被检查的服务器的ip地址或主机名地址</p></li></ul><p>示例：</p><ul><li><p>检查baidu.com是否联通</p><img src="/2025/04/25/Linux/pingbaidu.png" class=""></li></ul><p>结果显示联通，延迟51ms左右</p><h4 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h4><p>wget是非交互式的文件下载器，可以在命令行内下载网络文件</p><p>语法：<code>wget [-b] url</code></p><ul><li><p>选项：-b，可选，后台下载，会将日志写入到当前工作目录的wget-log文件</p></li><li><p>参数：url，下载链接</p></li></ul><p>示例：</p><ul><li><p>下载apache-hadoop 3.3.0版本：<code>wget http://archive.apache.org/dist/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz</code></p></li><li><p>在后台下载：<code>wget -b http://archive.apache.org/dist/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz</code></p></li><li><p>通过tail命令可以监控后台下载进度：<code>tail -f wget-log</code></p></li></ul><p>注意：无论下载是否完成，都会生成要下载的文件，如果下载未完成，要把吓到一半的文件删除，重新下。</p><h4 id="curl命令"><a href="#curl命令" class="headerlink" title="curl命令"></a>curl命令</h4><p>curl可以发送网络请求，用于：下载文件、获取信息等</p><p>语法：<code>curl [-O] url</code></p><ul><li><p>选项：-O，用于下载文件，当url是下载链接时，可以使用此选项保存文件</p></li><li><p>参数：url，要发起请求的网络地址</p></li></ul><p>示例：</p><ul><li><p>向cip.cc发起网络请求:<code>curl cip.cc</code></p></li><li><p>向python.itheima.com发起网络请求：<code>curl python.itheima.com</code></p></li><li><p>通过curl下载hadoop-3.3.0安装包：<code>curl -O http://archive.apache.org/dist/hadoop/common/hadoop-3.3.0/hadoop-3.3.0.tar.gz</code></p></li></ul><p>这个等同于我们在浏览器里面打开网址</p><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>端口是设备与外界通讯交流的出入口。端口可以分为：物理端口和虚拟端口两类</p><ul><li><p>物理端口：可以称之为接口，是可见的端口，如USB接口、RJ45网口、HDMI端口等</p></li><li><p>虚拟端口：是指计算机内部的端口，是不可见的，是用来操作系统和外部进行交互使用的</p></li></ul><h4 id="端口（虚拟）"><a href="#端口（虚拟）" class="headerlink" title="端口（虚拟）"></a>端口（虚拟）</h4><p>物理端口我们可以经常见到，也知道它的作用。</p><p>而虚拟端口则需要而外了解：</p><p>计算机程序之间得到通通讯，通过IP地址只能锁定计算机，但是无法锁定具体的程序。</p><p>而通过虚拟端口就可以锁定计算机上具体的程序，确保程序之间进行沟通</p><p>IP地址相当于小区地址，在小区内有许多住户（程序），而门牌号就是（端口）就是各个住户（程序）的联系地址</p><p>Linux系统就是一个超大号的小区，可以支持65535个端口，这6万多个端口可以分为3类：</p><ul><li><p>公认端口：1~1023，通常用于一些系统内置或知名程序的预留使用，如SSH服务的22端口，HTTPS服务的443端口非特殊需要，不要占用这个范围的端口</p></li><li><p>注册端口：1024~49151，通常看可以随意使用，用于松散的绑定一些程序&#x2F;服务</p></li><li><p>动态端口：49152~65535，通常不会固定绑定程序，而是当程序对外进行网络连接时，用于临时使用。</p></li></ul><h4 id="查看端口占用nmap-netstat"><a href="#查看端口占用nmap-netstat" class="headerlink" title="查看端口占用nmap-netstat"></a>查看端口占用nmap-netstat</h4><p>可以使用nmap命令，安装nmap：<code>yum -y install nmap</code></p><p>语法：<code>nmap 被查看的IP地址</code></p><p>我们还可以通过netstat命令，查看指定端口的占用情况，安装netstat：<code>yum -y install net-tools</code></p><p>语法：<code>netstat -anp |grep 端口号 </code></p><p>从图中可以看到当前系统6000端口被程序（进程号10529）占用</p><p>其中，0.0.0.0：6000，表示端口绑定在0.0.0.0在这个IP地址上，表示允许外部访问</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2025/04/05/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2025/04/05/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<img src="/2025/04/05/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png" class="">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/05/hello-world/"/>
    <url>/2025/04/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
