class MatrixStack{static reset(){this.depth=0}static loadIdentity(){for(let t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0}static push(){this.depth;var r=16*(this.depth+1);this.matrixStack.length<16+r&&(this.matrixStack.length=16+r);for(let t=0;t<16;t++)this.matrixStack[r+t]=this.currentMatrix[t];this.depth++}static pop(){this.depth--,this.depth<0&&(this.depth=0);var r=16*this.depth;for(let t=0;t<16;t++)this.currentMatrix[t]=this.matrixStack[r+t]}static getMatrix(){return this.currentMatrix}static multMatrix(t){let r,i,a;for(r=0;r<16;r++)this.tmp[r]=0;for(r=0;r<4;r++)for(i=0;i<4;i++)for(a=0;a<4;a++)this.tmp[r+4*i]+=this.currentMatrix[r+4*a]*t[a+4*i];for(r=0;r<16;r++)this.currentMatrix[r]=this.tmp[r]}}MatrixStack.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],MatrixStack.depth=0,MatrixStack.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],MatrixStack.tmp=new Array(16);export default MatrixStack;