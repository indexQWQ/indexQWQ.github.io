class LAppSprite{constructor(t,e,i,r,s){this._rect=new Rect,this._rect.left=t-.5*i,this._rect.right=t+.5*i,this._rect.up=e+.5*r,this._rect.down=e-.5*r,this._texture=s,this._vertexBuffer=null,this._uvBuffer=null,this._indexBuffer=null,this._positionLocation=null,this._uvLocation=null,this._textureLocation=null,this._positionArray=null,this._uvArray=null,this._indexArray=null,this._firstDraw=!0}release(){this._rect=null;var t=this._subdelegate.getGlManager().getGl();t.deleteTexture(this._texture),this._texture=null,t.deleteBuffer(this._uvBuffer),this._uvBuffer=null,t.deleteBuffer(this._vertexBuffer),this._vertexBuffer=null,t.deleteBuffer(this._indexBuffer),this._indexBuffer=null}getTexture(){return this._texture}render(t){var e,i;null!=this._texture&&(e=this._subdelegate.getGlManager().getGl(),this._firstDraw&&(this._positionLocation=e.getAttribLocation(t,"position"),e.enableVertexAttribArray(this._positionLocation),this._uvLocation=e.getAttribLocation(t,"uv"),e.enableVertexAttribArray(this._uvLocation),this._textureLocation=e.getUniformLocation(t,"texture"),e.uniform1i(this._textureLocation,0),this._uvArray=new Float32Array([1,0,0,0,0,1,1,1]),this._uvBuffer=e.createBuffer(),t=this._subdelegate.getCanvas().width,i=this._subdelegate.getCanvas().height,this._positionArray=new Float32Array([(this._rect.right-.5*t)/(.5*t),(this._rect.up-.5*i)/(.5*i),(this._rect.left-.5*t)/(.5*t),(this._rect.up-.5*i)/(.5*i),(this._rect.left-.5*t)/(.5*t),(this._rect.down-.5*i)/(.5*i),(this._rect.right-.5*t)/(.5*t),(this._rect.down-.5*i)/(.5*i)]),this._vertexBuffer=e.createBuffer(),this._indexArray=new Uint16Array([0,1,2,3,2,0]),this._indexBuffer=e.createBuffer(),this._firstDraw=!1),e.bindBuffer(e.ARRAY_BUFFER,this._uvBuffer),e.bufferData(e.ARRAY_BUFFER,this._uvArray,e.STATIC_DRAW),e.vertexAttribPointer(this._uvLocation,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,this._vertexBuffer),e.bufferData(e.ARRAY_BUFFER,this._positionArray,e.STATIC_DRAW),e.vertexAttribPointer(this._positionLocation,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this._indexBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this._indexArray,e.DYNAMIC_DRAW),e.bindTexture(e.TEXTURE_2D,this._texture),e.drawElements(e.TRIANGLES,this._indexArray.length,e.UNSIGNED_SHORT,0))}isHit(t,e){var i=this._subdelegate.getCanvas().height,i=i-e;return t>=this._rect.left&&t<=this._rect.right&&i<=this._rect.up&&i>=this._rect.down}setSubdelegate(t){this._subdelegate=t}}class Rect{}export{LAppSprite,Rect};