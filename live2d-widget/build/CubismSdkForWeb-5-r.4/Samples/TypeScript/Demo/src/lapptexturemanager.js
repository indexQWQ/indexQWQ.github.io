import{csmVector}from"@framework/type/csmvector";class LAppTextureManager{constructor(){this._textures=new csmVector}release(){for(var e=this._textures.begin();e.notEqual(this._textures.end());e.preIncrement())this._glManager.getGl().deleteTexture(e.ptr().id);this._textures=null}createTextureFromPngFile(r,s,a){for(let e=this._textures.begin();e.notEqual(this._textures.end());e.preIncrement())if(e.ptr().fileName==r&&e.ptr().usePremultply==s)return e.ptr().img=new Image,e.ptr().img.addEventListener("load",()=>a(e.ptr()),{passive:!0}),void(e.ptr().img.src=r);let g=new Image;g.addEventListener("load",()=>{var e=this._glManager.getGl().createTexture(),t=(this._glManager.getGl().bindTexture(this._glManager.getGl().TEXTURE_2D,e),this._glManager.getGl().texParameteri(this._glManager.getGl().TEXTURE_2D,this._glManager.getGl().TEXTURE_MIN_FILTER,this._glManager.getGl().LINEAR_MIPMAP_LINEAR),this._glManager.getGl().texParameteri(this._glManager.getGl().TEXTURE_2D,this._glManager.getGl().TEXTURE_MAG_FILTER,this._glManager.getGl().LINEAR),s&&this._glManager.getGl().pixelStorei(this._glManager.getGl().UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),this._glManager.getGl().texImage2D(this._glManager.getGl().TEXTURE_2D,0,this._glManager.getGl().RGBA,this._glManager.getGl().RGBA,this._glManager.getGl().UNSIGNED_BYTE,g),this._glManager.getGl().generateMipmap(this._glManager.getGl().TEXTURE_2D),this._glManager.getGl().bindTexture(this._glManager.getGl().TEXTURE_2D,null),new TextureInfo);null!=t&&(t.fileName=r,t.width=g.width,t.height=g.height,t.id=e,t.img=g,t.usePremultply=s,null!=this._textures)&&this._textures.pushBack(t),a(t)},{passive:!0}),g.src=r}releaseTextures(){for(let e=0;e<this._textures.getSize();e++)this._glManager.getGl().deleteTexture(this._textures.at(e).id),this._textures.set(e,null);this._textures.clear()}releaseTextureByTexture(t){for(let e=0;e<this._textures.getSize();e++)if(this._textures.at(e).id==t){this._glManager.getGl().deleteTexture(this._textures.at(e).id),this._textures.set(e,null),this._textures.remove(e);break}}releaseTextureByFilePath(t){for(let e=0;e<this._textures.getSize();e++)if(this._textures.at(e).fileName==t){this._glManager.getGl().deleteTexture(this._textures.at(e).id),this._textures.set(e,null),this._textures.remove(e);break}}setGlManager(e){this._glManager=e}}class TextureInfo{constructor(){this.id=null,this.width=0,this.height=0}}export{LAppTextureManager,TextureInfo};