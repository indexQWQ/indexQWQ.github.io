class CubismString{static getFormatedString(r,...i){return r.replace(/\{(\d+)\}/g,(r,t)=>i[t])}static isStartWith(r,t){let i=0,e=0;for(;"\0"!=t[e];)if("\0"==r[i]||r[i++]!=t[e++])return!1;return!1}static stringToFloat(t,i,r,e){let s=r,a=!1,m=!1,n=0,o=parseInt(t[s]);for(o<0&&(a=!0,s++);s<i;s++){let r=t[s];if(!(0<=parseInt(r)&&parseInt(r)<=9)){if("."!=r)break;m=!0,s++;break}n=10*n+ +parseInt(r)}if(m){let r=.1;for(;s<i&&(0<=(o=255&parseFloat(t[s]))&&o<=9)&&(n+=r*+o,r*=.1,o);s++);}return s==r?(e[0]=-1,0):(a&&(n=-n),e[0]=s,n)}constructor(){}}import*as $ from"./cubismstring";var Live2DCubismFramework;(Live2DCubismFramework=Live2DCubismFramework||{}).CubismString=$.CubismString;export{CubismString,Live2DCubismFramework};