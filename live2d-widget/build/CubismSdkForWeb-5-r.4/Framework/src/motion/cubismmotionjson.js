import{CubismFramework}from"../live2dcubismframework";import{csmString}from"../type/csmstring";import{CSM_ASSERT,CubismLogWarning}from"../utils/cubismdebug";import{CubismJson}from"../utils/cubismjson";import{CubismMotionSegmentType}from"./cubismmotioninternal";let Meta="Meta",Duration="Duration",Loop="Loop",AreBeziersRestricted="AreBeziersRestricted",CurveCount="CurveCount",Fps="Fps",TotalSegmentCount="TotalSegmentCount",TotalPointCount="TotalPointCount",Curves="Curves",Target="Target",Id="Id",FadeInTime="FadeInTime",FadeOutTime="FadeOutTime",Segments="Segments",UserData="UserData",UserDataCount="UserDataCount",TotalUserDataSize="TotalUserDataSize",Time="Time",Value="Value";class CubismMotionJson{constructor(t,e){this._json=CubismJson.create(t,e)}release(){CubismJson.delete(this._json)}getMotionDuration(){return this._json.getRoot().getValueByString(Meta).getValueByString(Duration).toFloat()}isMotionLoop(){return this._json.getRoot().getValueByString(Meta).getValueByString(Loop).toBoolean()}hasConsistency(){let t=!0;if(!this._json||!this._json.getRoot())return!1;var o=this._json.getRoot().getValueByString(Curves).getVector().getSize();let n=0,i=0;for(let e=0;e<o;++e)for(let t=0;t<this.getMotionCurveSegmentCount(e);){switch(0==t&&(i+=1,t+=2),this.getMotionCurveSegment(e,t)){case CubismMotionSegmentType.CubismMotionSegmentType_Linear:i+=1,t+=3;break;case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:i+=3,t+=7;break;case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:i+=1,t+=3;break;default:CSM_ASSERT(0)}++n}return o!=this.getMotionCurveCount()&&(CubismLogWarning("The number of curves does not match the metadata."),t=!1),n!=this.getMotionTotalSegmentCount()&&(CubismLogWarning("The number of segment does not match the metadata."),t=!1),i!=this.getMotionTotalPointCount()&&(CubismLogWarning("The number of point does not match the metadata."),t=!1),t}getEvaluationOptionFlag(t){return EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted==t&&this._json.getRoot().getValueByString(Meta).getValueByString(AreBeziersRestricted).toBoolean()}getMotionCurveCount(){return this._json.getRoot().getValueByString(Meta).getValueByString(CurveCount).toInt()}getMotionFps(){return this._json.getRoot().getValueByString(Meta).getValueByString(Fps).toFloat()}getMotionTotalSegmentCount(){return this._json.getRoot().getValueByString(Meta).getValueByString(TotalSegmentCount).toInt()}getMotionTotalPointCount(){return this._json.getRoot().getValueByString(Meta).getValueByString(TotalPointCount).toInt()}isExistMotionFadeInTime(){return!this._json.getRoot().getValueByString(Meta).getValueByString(FadeInTime).isNull()}isExistMotionFadeOutTime(){return!this._json.getRoot().getValueByString(Meta).getValueByString(FadeOutTime).isNull()}getMotionFadeInTime(){return this._json.getRoot().getValueByString(Meta).getValueByString(FadeInTime).toFloat()}getMotionFadeOutTime(){return this._json.getRoot().getValueByString(Meta).getValueByString(FadeOutTime).toFloat()}getMotionCurveTarget(t){return this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(Target).getRawString()}getMotionCurveId(t){return CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(Id).getRawString())}isExistMotionCurveFadeInTime(t){return!this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(FadeInTime).isNull()}isExistMotionCurveFadeOutTime(t){return!this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(FadeOutTime).isNull()}getMotionCurveFadeInTime(t){return this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(FadeInTime).toFloat()}getMotionCurveFadeOutTime(t){return this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(FadeOutTime).toFloat()}getMotionCurveSegmentCount(t){return this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(Segments).getVector().getSize()}getMotionCurveSegment(t,e){return this._json.getRoot().getValueByString(Curves).getValueByIndex(t).getValueByString(Segments).getValueByIndex(e).toFloat()}getEventCount(){return this._json.getRoot().getValueByString(Meta).getValueByString(UserDataCount).toInt()}getTotalEventValueSize(){return this._json.getRoot().getValueByString(Meta).getValueByString(TotalUserDataSize).toInt()}getEventTime(t){return this._json.getRoot().getValueByString(UserData).getValueByIndex(t).getValueByString(Time).toFloat()}getEventValue(t){return new csmString(this._json.getRoot().getValueByString(UserData).getValueByIndex(t).getValueByString(Value).getRawString())}}var EvaluationOptionFlag,Live2DCubismFramework;(t=>{t[t.EvaluationOptionFlag_AreBeziersRistricted=0]="EvaluationOptionFlag_AreBeziersRistricted"})(EvaluationOptionFlag=EvaluationOptionFlag||{});import*as $ from"./cubismmotionjson";(Live2DCubismFramework=Live2DCubismFramework||{}).CubismMotionJson=$.CubismMotionJson;export{CubismMotionJson,EvaluationOptionFlag,Live2DCubismFramework};