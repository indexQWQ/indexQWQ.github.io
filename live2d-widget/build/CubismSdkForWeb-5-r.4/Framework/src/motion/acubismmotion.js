import{CubismMath}from"../math/cubismmath";import{csmVector}from"../type/csmvector";import{CSM_ASSERT,CubismDebug}from"../utils/cubismdebug";class ACubismMotion{static delete(e){e.release()}constructor(){this.setBeganMotionHandler=e=>this._onBeganMotion=e,this.getBeganMotionHandler=()=>this._onBeganMotion,this.setFinishedMotionHandler=e=>this._onFinishedMotion=e,this.getFinishedMotionHandler=()=>this._onFinishedMotion,this._fadeInSeconds=-1,this._fadeOutSeconds=-1,this._weight=1,this._offsetSeconds=0,this._isLoop=!1,this._isLoopFadeIn=!0,this._previousLoopState=this._isLoop,this._firedEventValues=new csmVector}release(){this._weight=0}updateParameters(e,t,i){var s;t.isAvailable()&&!t.isFinished()&&(this.setupMotionQueueEntry(t,i),s=this.updateFadeWeight(t,i),this.doUpdateParameters(e,i,s,t),0<t.getEndTime())&&t.getEndTime()<i&&t.setIsFinished(!0)}setupMotionQueueEntry(e,t){null==e||e.isStarted()||e.isAvailable()&&(e.setIsStarted(!0),e.setStartTime(t-this._offsetSeconds),e.setFadeInStartTime(t),e.getEndTime()<0&&this.adjustEndTime(e),e._motion._onBeganMotion)&&e._motion._onBeganMotion(e._motion)}updateFadeWeight(e,t){null==e&&CubismDebug.print(LogLevel.LogLevel_Error,"motionQueueEntry is null.");var i=this._weight,s=0==this._fadeInSeconds?1:CubismMath.getEasingSine((t-e.getFadeInStartTime())/this._fadeInSeconds),o=0==this._fadeOutSeconds||e.getEndTime()<0?1:CubismMath.getEasingSine((e.getEndTime()-t)/this._fadeOutSeconds);return e.setState(t,i=i*s*o),CSM_ASSERT(0<=i&&i<=1),i}setFadeInTime(e){this._fadeInSeconds=e}setFadeOutTime(e){this._fadeOutSeconds=e}getFadeOutTime(){return this._fadeOutSeconds}getFadeInTime(){return this._fadeInSeconds}setWeight(e){this._weight=e}getWeight(){return this._weight}getDuration(){return-1}getLoopDuration(){return-1}setOffsetTime(e){this._offsetSeconds=e}setLoop(e){this._isLoop=e}getLoop(){return this._isLoop}setLoopFadeIn(e){this._isLoopFadeIn=e}getLoopFadeIn(){return this._isLoopFadeIn}getFiredEvent(e,t){return this._firedEventValues}isExistModelOpacity(){return!1}getModelOpacityIndex(){return-1}getModelOpacityId(e){return null}getModelOpacityValue(){return 1}adjustEndTime(e){var t=this.getDuration(),t=t<=0?-1:e.getStartTime()+t;e.setEndTime(t)}}import*as $ from"./acubismmotion";import{LogLevel}from"../live2dcubismframework";var Live2DCubismFramework;(Live2DCubismFramework=Live2DCubismFramework||{}).ACubismMotion=$.ACubismMotion;export{ACubismMotion,Live2DCubismFramework};