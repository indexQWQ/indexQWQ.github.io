import{csmDelete,CubismFramework}from"../live2dcubismframework";import{CubismMath}from"../math/cubismmath";import{csmString}from"../type/csmstring";import{CSM_ASSERT,CubismLogDebug,CubismLogError,CubismLogWarning}from"../utils/cubismdebug";import{ACubismMotion}from"./acubismmotion";import{CubismMotionCurve,CubismMotionCurveTarget,CubismMotionData,CubismMotionEvent,CubismMotionPoint,CubismMotionSegment,CubismMotionSegmentType}from"./cubismmotioninternal";import{CubismMotionJson,EvaluationOptionFlag}from"./cubismmotionjson";let EffectNameEyeBlink="EyeBlink",EffectNameLipSync="LipSync",TargetNameModel="Model",TargetNameParameter="Parameter",TargetNamePartOpacity="PartOpacity",IdNameOpacity="Opacity",UseOldBeziersCurveMotion=!1;function lerpPoints(t,e,i){var o=new CubismMotionPoint;return o.time=t.time+(e.time-t.time)*i,o.value=t.value+(e.value-t.value)*i,o}function linearEvaluate(t,e){let i=(e-t[0].time)/(t[1].time-t[0].time);return i<0&&(i=0),t[0].value+(t[1].value-t[0].value)*i}function bezierEvaluate(t,e){let i=(e-t[0].time)/(t[3].time-t[0].time);i<0&&(i=0);var e=lerpPoints(t[0],t[1],i),o=lerpPoints(t[1],t[2],i),t=lerpPoints(t[2],t[3],i),e=lerpPoints(e,o,i),o=lerpPoints(o,t,i);return lerpPoints(e,o,i).value}function bezierEvaluateBinarySearch(t,e){var i=.01,o=e;let a=t[0].time,n=t[3].time,s=t[1].time,r=t[2].time,m=0,u=1,d=0,l=0;for(;l<20;++l){if(o<a+i){d=m;break}if(n-i<o){d=u;break}var g=.5*(s+r),v=(s=.5*(a+s),r=.5*(n+r),.5*(s+g)),p=.5*(r+g);if(o<(g=.5*(v+p))){if(u=.5*(m+u),g-i<o){d=u;break}n=g,r=v}else{if(m=.5*(m+u),o<g+i){d=m;break}a=g,s=p}}1<(d=(d=20==l?.5*(m+u):d)<0?0:d)&&(d=1);var e=lerpPoints(t[0],t[1],d),h=lerpPoints(t[1],t[2],d),t=lerpPoints(t[2],t[3],d),e=lerpPoints(e,h,d),h=lerpPoints(h,t,d);return lerpPoints(e,h,d).value}function bezierEvaluateCardanoInterpretation(t,e){var i=t[0].time,o=t[3].time,a=t[1].time,n=t[2].time,o=CubismMath.cardanoAlgorithmForBezier(o-3*n+3*a-i,3*n-6*a+3*i,3*a-3*i,i-e),n=lerpPoints(t[0],t[1],o),a=lerpPoints(t[1],t[2],o),i=lerpPoints(t[2],t[3],o),e=lerpPoints(n,a,o),t=lerpPoints(a,i,o);return lerpPoints(e,t,o).value}function steppedEvaluate(t,e){return t[0].value}function inverseSteppedEvaluate(t,e){return t[1].value}function evaluateCurve(e,i,o,t,a){i=e.curves.at(i);let n=-1;var s=i.baseSegmentIndex+i.segmentCount;let r=0;for(let t=i.baseSegmentIndex;t<s;++t)if(r=e.segments.at(t).basePointIndex+(e.segments.at(t).segmentType==CubismMotionSegmentType.CubismMotionSegmentType_Bezier?3:1),e.points.at(r).time>o){n=t;break}return-1==n?t&&o<a?correctEndPoint(e,s-1,e.segments.at(i.baseSegmentIndex).basePointIndex,r,o,a):e.points.at(r).value:(t=e.segments.at(n)).evaluate(e.points.get(t.basePointIndex),o)}function correctEndPoint(t,e,i,o,a,n){var s=[new CubismMotionPoint,new CubismMotionPoint],o=t.points.at(o),o=(s[0].time=o.time,s[0].value=o.value,t.points.at(i));switch(s[1].time=n,s[1].value=o.value,t.segments.at(e).segmentType){case CubismMotionSegmentType.CubismMotionSegmentType_Linear:case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:default:return linearEvaluate(s,a);case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:return steppedEvaluate(s,a);case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:return inverseSteppedEvaluate(s,a)}}var MotionBehavior,Live2DCubismFramework;(t=>{t[t.MotionBehavior_V1=0]="MotionBehavior_V1",t[t.MotionBehavior_V2=1]="MotionBehavior_V2"})(MotionBehavior=MotionBehavior||{});class CubismMotion extends ACubismMotion{static create(t,e,i,o,a=!1){var n=new CubismMotion;return n.parse(t,e,a),n._motionData?(n._sourceFrameRate=n._motionData.fps,n._loopDurationSeconds=n._motionData.duration,n._onFinishedMotion=i,n._onBeganMotion=o,n):(csmDelete(n),null)}doUpdateParameters(e,o,a,n){null==this._modelCurveIdEyeBlink&&(this._modelCurveIdEyeBlink=CubismFramework.getIdManager().getId(EffectNameEyeBlink)),null==this._modelCurveIdLipSync&&(this._modelCurveIdLipSync=CubismFramework.getIdManager().getId(EffectNameLipSync)),null==this._modelCurveIdOpacity&&(this._modelCurveIdOpacity=CubismFramework.getIdManager().getId(IdNameOpacity)),this._motionBehavior===MotionBehavior.MotionBehavior_V2&&this._previousLoopState!==this._isLoop&&(this.adjustEndTime(n),this._previousLoopState=this._isLoop);let t=o-n.getStartTime(),s=(t<0&&(t=0),Number.MAX_VALUE),r=Number.MAX_VALUE;let m=0,u=0;64<this._eyeBlinkParameterIds.getSize()&&CubismLogDebug("too many eye blink targets : {0}",this._eyeBlinkParameterIds.getSize()),64<this._lipSyncParameterIds.getSize()&&CubismLogDebug("too many lip sync targets : {0}",this._lipSyncParameterIds.getSize());var d=this._fadeInSeconds<=0?1:CubismMath.getEasingSine((o-n.getFadeInStartTime())/this._fadeInSeconds),l=this._fadeOutSeconds<=0||n.getEndTime()<0?1:CubismMath.getEasingSine((n.getEndTime()-o)/this._fadeOutSeconds);let g,v,p,h=t,_=this._motionData.duration;var C=this._motionBehavior===MotionBehavior.MotionBehavior_V2&&this._isLoop;if(this._isLoop)for(this._motionBehavior===MotionBehavior.MotionBehavior_V2&&(_+=1/this._motionData.fps);h>_;)h-=_;var M=this._motionData.curves;for(v=0;v<this._motionData.curveCount&&M.at(v).type==CubismMotionCurveTarget.CubismMotionCurveTarget_Model;++v)g=evaluateCurve(this._motionData,v,h,C,_),M.at(v).id==this._modelCurveIdEyeBlink?r=g:M.at(v).id==this._modelCurveIdLipSync?s=g:M.at(v).id==this._modelCurveIdOpacity&&(this._modelOpacity=g,e.setModelOapcity(this.getModelOpacityValue()));let i=0;for(;v<this._motionData.curveCount&&M.at(v).type==CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;++v)if(i++,-1!=(p=e.getParameterIndex(M.at(v).id))){var c=e.getParameterValueByIndex(p);if(g=evaluateCurve(this._motionData,v,h,C,_),r!=Number.MAX_VALUE)for(let t=0;t<this._eyeBlinkParameterIds.getSize()&&t<64;++t)if(this._eyeBlinkParameterIds.at(t)==M.at(v).id){g*=r,u|=1<<t;break}if(s!=Number.MAX_VALUE)for(let t=0;t<this._lipSyncParameterIds.getSize()&&t<64;++t)if(this._lipSyncParameterIds.at(t)==M.at(v).id){g+=s,m|=1<<t;break}e.isRepeat(p)&&(g=e.getParameterRepeatValue(p,g));let i;if(M.at(v).fadeInTime<0&&M.at(v).fadeOutTime<0)i=c+(g-c)*a;else{let t,e;t=M.at(v).fadeInTime<0?d:0==M.at(v).fadeInTime?1:CubismMath.getEasingSine((o-n.getFadeInStartTime())/M.at(v).fadeInTime),e=M.at(v).fadeOutTime<0?l:0==M.at(v).fadeOutTime||n.getEndTime()<0?1:CubismMath.getEasingSine((n.getEndTime()-o)/M.at(v).fadeOutTime);var b=this._weight*t*e;i=c+(g-c)*b}e.setParameterValueByIndex(p,i,1)}if(r!=Number.MAX_VALUE)for(let t=0;t<this._eyeBlinkParameterIds.getSize()&&t<64;++t){var S=e.getParameterValueById(this._eyeBlinkParameterIds.at(t));u>>t&1||(S=S+(r-S)*a,e.setParameterValueById(this._eyeBlinkParameterIds.at(t),S))}if(s!=Number.MAX_VALUE)for(let t=0;t<this._lipSyncParameterIds.getSize()&&t<64;++t){var f=e.getParameterValueById(this._lipSyncParameterIds.at(t));m>>t&1||(f=f+(s-f)*a,e.setParameterValueById(this._lipSyncParameterIds.at(t),f))}for(;v<this._motionData.curveCount&&M.at(v).type==CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;++v)-1!=(p=e.getParameterIndex(M.at(v).id))&&(g=evaluateCurve(this._motionData,v,h,C,_),e.setParameterValueByIndex(p,g));t>=_&&(this._isLoop?this.updateForNextLoop(n,o,h):(this._onFinishedMotion&&this._onFinishedMotion(this),n.setIsFinished(!0))),this._lastWeight=a}setIsLoop(t){CubismLogWarning("setIsLoop() is a deprecated function. Please use setLoop()."),this._isLoop=t}isLoop(){return CubismLogWarning("isLoop() is a deprecated function. Please use getLoop()."),this._isLoop}setIsLoopFadeIn(t){CubismLogWarning("setIsLoopFadeIn() is a deprecated function. Please use setLoopFadeIn()."),this._isLoopFadeIn=t}isLoopFadeIn(){return CubismLogWarning("isLoopFadeIn() is a deprecated function. Please use getLoopFadeIn()."),this._isLoopFadeIn}setMotionBehavior(t){this._motionBehavior=t}getMotionBehavior(){return this._motionBehavior}getDuration(){return this._isLoop?-1:this._loopDurationSeconds}getLoopDuration(){return this._loopDurationSeconds}setParameterFadeInTime(e,i){var o=this._motionData.curves;for(let t=0;t<this._motionData.curveCount;++t)if(e==o.at(t).id)return void(o.at(t).fadeInTime=i)}setParameterFadeOutTime(e,i){var o=this._motionData.curves;for(let t=0;t<this._motionData.curveCount;++t)if(e==o.at(t).id)return void(o.at(t).fadeOutTime=i)}getParameterFadeInTime(e){var i=this._motionData.curves;for(let t=0;t<this._motionData.curveCount;++t)if(e==i.at(t).id)return i.at(t).fadeInTime;return-1}getParameterFadeOutTime(e){var i=this._motionData.curves;for(let t=0;t<this._motionData.curveCount;++t)if(e==i.at(t).id)return i.at(t).fadeOutTime;return-1}setEffectIds(t,e){this._eyeBlinkParameterIds=t,this._lipSyncParameterIds=e}constructor(){super(),this._motionBehavior=MotionBehavior.MotionBehavior_V2,this._sourceFrameRate=30,this._loopDurationSeconds=-1,this._isLoop=!1,this._isLoopFadeIn=!0,this._lastWeight=0,this._motionData=null,this._modelCurveIdEyeBlink=null,this._modelCurveIdLipSync=null,this._modelCurveIdOpacity=null,this._eyeBlinkParameterIds=null,this._lipSyncParameterIds=null,this._modelOpacity=1,this._debugMode=!1}release(){this._motionData=void 0,this._motionData=null}updateForNextLoop(t,e,i){switch(this._motionBehavior){case MotionBehavior.MotionBehavior_V2:default:t.setStartTime(e-i),this._isLoopFadeIn&&t.setFadeInStartTime(e-i),null!=this._onFinishedMotion&&this._onFinishedMotion(this);break;case MotionBehavior.MotionBehavior_V1:t.setStartTime(e),this._isLoopFadeIn&&t.setFadeInStartTime(e)}}parse(t,e,a=!1){let n=new CubismMotionJson(t,e);if(n){if(a)if(!n.hasConsistency())return n.release(),void CubismLogError("Inconsistent motion3.json.");this._motionData=new CubismMotionData,this._motionData.duration=n.getMotionDuration(),this._motionData.loop=n.isMotionLoop(),this._motionData.curveCount=n.getMotionCurveCount(),this._motionData.fps=n.getMotionFps(),this._motionData.eventCount=n.getEventCount();var s=n.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);n.isExistMotionFadeInTime()?this._fadeInSeconds=n.getMotionFadeInTime()<0?1:n.getMotionFadeInTime():this._fadeInSeconds=1,n.isExistMotionFadeOutTime()?this._fadeOutSeconds=n.getMotionFadeOutTime()<0?1:n.getMotionFadeOutTime():this._fadeOutSeconds=1,this._motionData.curves.updateSize(this._motionData.curveCount,CubismMotionCurve,!0),this._motionData.segments.updateSize(n.getMotionTotalSegmentCount(),CubismMotionSegment,!0),this._motionData.points.updateSize(n.getMotionTotalPointCount(),CubismMotionPoint,!0),this._motionData.events.updateSize(this._motionData.eventCount,CubismMotionEvent,!0);let i=0,o=0;for(let e=0;e<this._motionData.curveCount;++e){n.getMotionCurveTarget(e)==TargetNameModel?this._motionData.curves.at(e).type=CubismMotionCurveTarget.CubismMotionCurveTarget_Model:n.getMotionCurveTarget(e)==TargetNameParameter?this._motionData.curves.at(e).type=CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter:n.getMotionCurveTarget(e)==TargetNamePartOpacity?this._motionData.curves.at(e).type=CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity:CubismLogWarning('Warning : Unable to get segment type from Curve! The number of "CurveCount" may be incorrect!'),this._motionData.curves.at(e).id=n.getMotionCurveId(e),this._motionData.curves.at(e).baseSegmentIndex=o,this._motionData.curves.at(e).fadeInTime=n.isExistMotionCurveFadeInTime(e)?n.getMotionCurveFadeInTime(e):-1,this._motionData.curves.at(e).fadeOutTime=n.isExistMotionCurveFadeOutTime(e)?n.getMotionCurveFadeOutTime(e):-1;for(let t=0;t<n.getMotionCurveSegmentCount(e);){switch(0==t?(this._motionData.segments.at(o).basePointIndex=i,this._motionData.points.at(i).time=n.getMotionCurveSegment(e,t),this._motionData.points.at(i).value=n.getMotionCurveSegment(e,t+1),i+=1,t+=2):this._motionData.segments.at(o).basePointIndex=i-1,n.getMotionCurveSegment(e,t)){case CubismMotionSegmentType.CubismMotionSegmentType_Linear:this._motionData.segments.at(o).segmentType=CubismMotionSegmentType.CubismMotionSegmentType_Linear,this._motionData.segments.at(o).evaluate=linearEvaluate,this._motionData.points.at(i).time=n.getMotionCurveSegment(e,t+1),this._motionData.points.at(i).value=n.getMotionCurveSegment(e,t+2),i+=1,t+=3;break;case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:this._motionData.segments.at(o).segmentType=CubismMotionSegmentType.CubismMotionSegmentType_Bezier,s||UseOldBeziersCurveMotion?this._motionData.segments.at(o).evaluate=bezierEvaluate:this._motionData.segments.at(o).evaluate=bezierEvaluateCardanoInterpretation,this._motionData.points.at(i).time=n.getMotionCurveSegment(e,t+1),this._motionData.points.at(i).value=n.getMotionCurveSegment(e,t+2),this._motionData.points.at(i+1).time=n.getMotionCurveSegment(e,t+3),this._motionData.points.at(i+1).value=n.getMotionCurveSegment(e,t+4),this._motionData.points.at(i+2).time=n.getMotionCurveSegment(e,t+5),this._motionData.points.at(i+2).value=n.getMotionCurveSegment(e,t+6),i+=3,t+=7;break;case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:this._motionData.segments.at(o).segmentType=CubismMotionSegmentType.CubismMotionSegmentType_Stepped,this._motionData.segments.at(o).evaluate=steppedEvaluate,this._motionData.points.at(i).time=n.getMotionCurveSegment(e,t+1),this._motionData.points.at(i).value=n.getMotionCurveSegment(e,t+2),i+=1,t+=3;break;case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:this._motionData.segments.at(o).segmentType=CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped,this._motionData.segments.at(o).evaluate=inverseSteppedEvaluate,this._motionData.points.at(i).time=n.getMotionCurveSegment(e,t+1),this._motionData.points.at(i).value=n.getMotionCurveSegment(e,t+2),i+=1,t+=3;break;default:CSM_ASSERT(0)}++this._motionData.curves.at(e).segmentCount,++o}}for(let t=0;t<n.getEventCount();++t)this._motionData.events.at(t).fireTime=n.getEventTime(t),this._motionData.events.at(t).value=n.getEventValue(t);n.release(),n=void 0,n=null}else n.release(),n=void 0}getFiredEvent(e,i){this._firedEventValues.updateSize(0);for(let t=0;t<this._motionData.eventCount;++t)this._motionData.events.at(t).fireTime>e&&this._motionData.events.at(t).fireTime<=i&&this._firedEventValues.pushBack(new csmString(this._motionData.events.at(t).value.s));return this._firedEventValues}isExistModelOpacity(){for(let t=0;t<this._motionData.curveCount;t++){var e=this._motionData.curves.at(t);if(e.type==CubismMotionCurveTarget.CubismMotionCurveTarget_Model&&0==e.id.getString().s.localeCompare(IdNameOpacity))return!0}return!1}getModelOpacityIndex(){if(this.isExistModelOpacity())for(let t=0;t<this._motionData.curveCount;t++){var e=this._motionData.curves.at(t);if(e.type==CubismMotionCurveTarget.CubismMotionCurveTarget_Model&&0==e.id.getString().s.localeCompare(IdNameOpacity))return t}return-1}getModelOpacityId(t){if(-1!=t){t=this._motionData.curves.at(t);if(t.type==CubismMotionCurveTarget.CubismMotionCurveTarget_Model&&0==t.id.getString().s.localeCompare(IdNameOpacity))return CubismFramework.getIdManager().getId(t.id.getString().s)}return null}getModelOpacityValue(){return this._modelOpacity}setDebugMode(t){this._debugMode=t}}import*as $ from"./cubismmotion";(Live2DCubismFramework=Live2DCubismFramework||{}).CubismMotion=$.CubismMotion;export{MotionBehavior,CubismMotion,Live2DCubismFramework};