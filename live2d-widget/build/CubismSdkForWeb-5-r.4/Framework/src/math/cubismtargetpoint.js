import{CubismMath}from"./cubismmath";let FrameRate=30,Epsilon=.01;class CubismTargetPoint{constructor(){this._faceTargetX=0,this._faceTargetY=0,this._faceX=0,this._faceY=0,this._faceVX=0,this._faceVY=0,this._lastTimeSeconds=0,this._userTimeSeconds=0}update(s){this._userTimeSeconds+=s;let i=4/FrameRate;if(0==this._lastTimeSeconds)this._lastTimeSeconds=this._userTimeSeconds;else{var s=(this._userTimeSeconds-this._lastTimeSeconds)*FrameRate,a=(this._lastTimeSeconds=this._userTimeSeconds,.15*FrameRate),s=s*i/a,a=this._faceTargetX-this._faceX,h=this._faceTargetY-this._faceY;if(!(CubismMath.abs(a)<=Epsilon&&CubismMath.abs(h)<=Epsilon)){var r=CubismMath.sqrt(a*a+h*h),a=i*a/r,h=i*h/r;let e=a-this._faceVX,t=h-this._faceVY;a=CubismMath.sqrt(e*e+t*t);(a<-s||s<a)&&(e*=s/a,t*=s/a),this._faceVX+=e,this._faceVY+=t;{let e=.5*(CubismMath.sqrt(s*s+16*s*r-8*s*r)-s);h=CubismMath.sqrt(this._faceVX*this._faceVX+this._faceVY*this._faceVY);h>e&&(this._faceVX*=e/h,this._faceVY*=e/h)}this._faceX+=this._faceVX,this._faceY+=this._faceVY}}}getX(){return this._faceX}getY(){return this._faceY}set(e,t){this._faceTargetX=e,this._faceTargetY=t}}import*as $ from"./cubismtargetpoint";var Live2DCubismFramework;(Live2DCubismFramework=Live2DCubismFramework||{}).CubismTargetPoint=$.CubismTargetPoint;export{CubismTargetPoint,Live2DCubismFramework};