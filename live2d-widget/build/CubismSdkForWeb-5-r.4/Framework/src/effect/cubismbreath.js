class CubismBreath{static create(){return new CubismBreath}static delete(e){}setParameters(e){this._breathParameters=e}getParameters(){return this._breathParameters}updateParameters(t,e){this._currentTime+=e;var r=2*this._currentTime*Math.PI;for(let e=0;e<this._breathParameters.getSize();++e){var a=this._breathParameters.at(e);t.addParameterValueById(a.parameterId,a.offset+a.peak*Math.sin(r/a.cycle),a.weight)}}constructor(){this._currentTime=0}}class BreathParameterData{constructor(e,t,r,a,s){this.parameterId=null==e?null:e,this.offset=null==t?0:t,this.peak=null==r?0:r,this.cycle=null==a?0:a,this.weight=null==s?0:s}}import*as $ from"./cubismbreath";var Live2DCubismFramework;(e=>{e.BreathParameterData=$.BreathParameterData,e.CubismBreath=$.CubismBreath})(Live2DCubismFramework=Live2DCubismFramework||{});export{CubismBreath,BreathParameterData,Live2DCubismFramework};