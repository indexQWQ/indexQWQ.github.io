import{CubismFramework}from"../live2dcubismframework";import{csmVector}from"../type/csmvector";import{CubismJson}from"../utils/cubismjson";let Epsilon=.001,DefaultFadeInSeconds=.5,FadeIn="FadeInTime",Link="Link",Groups="Groups",Id="Id";class CubismPose{static create(t,e){t=CubismJson.create(t,e);if(!t)return null;var a=new CubismPose,e=t.getRoot(),r=(e.getValueByString(FadeIn).isNull()||(a._fadeTimeSeconds=e.getValueByString(FadeIn).toFloat(DefaultFadeInSeconds),a._fadeTimeSeconds<0&&(a._fadeTimeSeconds=DefaultFadeInSeconds)),e.getValueByString(Groups)),i=r.getSize();for(let t=0;t<i;++t){var s=r.getValueByIndex(t),n=s.getSize();let e=0;for(let t=0;t<n;++t){var o=s.getValueByIndex(t),p=new PartData,l=CubismFramework.getIdManager().getId(o.getValueByString(Id).getRawString());if(p.partId=l,!o.getValueByString(Link).isNull()){var d=o.getValueByString(Link),u=d.getSize();for(let t=0;t<u;++t){var m=new PartData,c=CubismFramework.getIdManager().getId(d.getValueByIndex(t).getString());m.partId=c,p.link.pushBack(m)}}a._partGroups.pushBack(p.clone()),++e}a._partGroupCounts.pushBack(e)}return CubismJson.delete(t),a}static delete(t){}updateParameters(e,a){e!=this._lastModel&&this.reset(e),this._lastModel=e,a<0&&(a=0);let r=0;for(let t=0;t<this._partGroupCounts.getSize();t++){var i=this._partGroupCounts.at(t);this.doFade(e,a,r,i),r+=i}this.copyPartOpacities(e)}reset(a){let r=0;for(let t=0;t<this._partGroupCounts.getSize();++t){var i=this._partGroupCounts.at(t);for(let e=r;e<r+i;++e){this._partGroups.at(e).initialize(a);var s=this._partGroups.at(e).partIndex,n=this._partGroups.at(e).parameterIndex;if(!(s<0)){a.setPartOpacityByIndex(s,e==r?1:0),a.setParameterValueByIndex(n,e==r?1:0);for(let t=0;t<this._partGroups.at(e).link.getSize();++t)this._partGroups.at(e).link.at(t).initialize(a)}}r+=i}}copyPartOpacities(e){for(let t=0;t<this._partGroups.getSize();++t){var a=this._partGroups.at(t);if(0!=a.link.getSize()){var r=this._partGroups.at(t).partIndex,i=e.getPartOpacityByIndex(r);for(let t=0;t<a.link.getSize();++t){var s=a.link.at(t).partIndex;s<0||e.setPartOpacityByIndex(s,i)}}}}doFade(a,e,r,i){let s=-1,n=1;for(let t=r;t<r+i;++t){var o=this._partGroups.at(t).partIndex,p=this._partGroups.at(t).parameterIndex;if(a.getParameterValueByIndex(p)>Epsilon){if(0<=s)break;s=t,0==this._fadeTimeSeconds?n=1:(n=a.getPartOpacityByIndex(o),1<(n+=e/this._fadeTimeSeconds)&&(n=1))}}s<0&&(s=0,n=1);for(let t=r;t<r+i;++t){var l=this._partGroups.at(t).partIndex;if(s==t)a.setPartOpacityByIndex(l,n);else{let t=a.getPartOpacityByIndex(l),e;.15<(1-(e=n<.5?-.5*n/.5+1:.5*(1-n)/.5))*(1-n)&&(e=1-.15/(1-n)),t>e&&(t=e),a.setPartOpacityByIndex(l,t)}}}constructor(){this._fadeTimeSeconds=DefaultFadeInSeconds,this._lastModel=null,this._partGroups=new csmVector,this._partGroupCounts=new csmVector}}class PartData{constructor(t){if(this.parameterIndex=0,this.partIndex=0,this.link=new csmVector,null!=t){this.partId=t.partId;for(var e=t.link.begin();e.notEqual(t.link.end());e.preIncrement())this.link.pushBack(e.ptr().clone())}}assignment(t){this.partId=t.partId;for(var e=t.link.begin();e.notEqual(t.link.end());e.preIncrement())this.link.pushBack(e.ptr().clone());return this}initialize(t){this.parameterIndex=t.getParameterIndex(this.partId),this.partIndex=t.getPartIndex(this.partId),t.setParameterValueByIndex(this.parameterIndex,1)}clone(){var t=new PartData;t.partId=this.partId,t.parameterIndex=this.parameterIndex,t.partIndex=this.partIndex,t.link=new csmVector;for(var e=this.link.begin();e.notEqual(this.link.end());e.increment())t.link.pushBack(e.ptr().clone());return t}}import*as $ from"./cubismpose";var Live2DCubismFramework;(t=>{t.CubismPose=$.CubismPose,t.PartData=$.PartData})(Live2DCubismFramework=Live2DCubismFramework||{});export{CubismPose,PartData,Live2DCubismFramework};