import{CubismFramework}from"../live2dcubismframework";import{CubismMath}from"../math/cubismmath";import{CubismBlendMode,CubismTextureColor}from"../rendering/cubismrenderer";import{csmMap}from"../type/csmmap";import{csmVector}from"../type/csmvector";import{CSM_ASSERT,CubismLogWarning}from"../utils/cubismdebug";class ParameterRepeatData{constructor(e=!1,r=!1){this.isOverridden=e,this.isParameterRepeated=r}}class DrawableColorData{constructor(e=!1,r=new CubismTextureColor){this.isOverridden=e,this.color=r}get isOverwritten(){return this.isOverridden}}class PartColorData{constructor(e=!1,r=new CubismTextureColor){this.isOverridden=e,this.color=r}get isOverwritten(){return this.isOverridden}}class DrawableCullingData{constructor(e=!1,r=!1){this.isOverridden=e,this.isCulling=r}get isOverwritten(){return this.isOverridden}}class CubismModel{update(){this._model.update(),this._model.drawables.resetDynamicFlags()}getPixelsPerUnit(){return null==this._model?0:this._model.canvasinfo.PixelsPerUnit}getCanvasWidth(){return null==this._model?0:this._model.canvasinfo.CanvasWidth/this._model.canvasinfo.PixelsPerUnit}getCanvasHeight(){return null==this._model?0:this._model.canvasinfo.CanvasHeight/this._model.canvasinfo.PixelsPerUnit}saveParameters(){var r=this._model.parameters.count,t=this._savedParameters.getSize();for(let e=0;e<r;++e)e<t?this._savedParameters.set(e,this._parameterValues[e]):this._savedParameters.pushBack(this._parameterValues[e])}getMultiplyColor(e){return this.getOverrideFlagForModelMultiplyColors()||this.getOverrideFlagForDrawableMultiplyColors(e)?this._userMultiplyColors.at(e).color:this.getDrawableMultiplyColor(e)}getScreenColor(e){return this.getOverrideFlagForModelScreenColors()||this.getOverrideFlagForDrawableScreenColors(e)?this._userScreenColors.at(e).color:this.getDrawableScreenColor(e)}setMultiplyColorByTextureColor(e,r){this.setMultiplyColorByRGBA(e,r.r,r.g,r.b,r.a)}setMultiplyColorByRGBA(e,r,t,a,s=1){this._userMultiplyColors.at(e).color.r=r,this._userMultiplyColors.at(e).color.g=t,this._userMultiplyColors.at(e).color.b=a,this._userMultiplyColors.at(e).color.a=s}setScreenColorByTextureColor(e,r){this.setScreenColorByRGBA(e,r.r,r.g,r.b,r.a)}setScreenColorByRGBA(e,r,t,a,s=1){this._userScreenColors.at(e).color.r=r,this._userScreenColors.at(e).color.g=t,this._userScreenColors.at(e).color.b=a,this._userScreenColors.at(e).color.a=s}getPartMultiplyColor(e){return this._userPartMultiplyColors.at(e).color}getPartScreenColor(e){return this._userPartScreenColors.at(e).color}setPartColor(r,t,a,s,i,e,l){if(e.at(r).color.r=t,e.at(r).color.g=a,e.at(r).color.b=s,e.at(r).color.a=i,e.at(r).isOverridden)for(let e=0;e<this._partChildDrawables.at(r).getSize();++e){var o=this._partChildDrawables.at(r).at(e);l.at(o).color.r=t,l.at(o).color.g=a,l.at(o).color.b=s,l.at(o).color.a=i}}setPartMultiplyColorByTextureColor(e,r){this.setPartMultiplyColorByRGBA(e,r.r,r.g,r.b,r.a)}setPartMultiplyColorByRGBA(e,r,t,a,s){this.setPartColor(e,r,t,a,s,this._userPartMultiplyColors,this._userMultiplyColors)}setPartScreenColorByTextureColor(e,r){this.setPartScreenColorByRGBA(e,r.r,r.g,r.b,r.a)}setPartScreenColorByRGBA(e,r,t,a,s){this.setPartColor(e,r,t,a,s,this._userPartScreenColors,this._userScreenColors)}getOverrideFlagForModelParameterRepeat(){return this._isOverriddenParameterRepeat}setOverrideFlagForModelParameterRepeat(e){this._isOverriddenParameterRepeat=e}getOverrideFlagForParameterRepeat(e){return this._userParameterRepeatDataList.at(e).isOverridden}setOverrideFlagForParameterRepeat(e,r){this._userParameterRepeatDataList.at(e).isOverridden=r}getRepeatFlagForParameterRepeat(e){return this._userParameterRepeatDataList.at(e).isParameterRepeated}setRepeatFlagForParameterRepeat(e,r){this._userParameterRepeatDataList.at(e).isParameterRepeated=r}getOverwriteFlagForModelMultiplyColors(){return CubismLogWarning("getOverwriteFlagForModelMultiplyColors() is a deprecated function. Please use getOverrideFlagForModelMultiplyColors()."),this.getOverrideFlagForModelMultiplyColors()}getOverrideFlagForModelMultiplyColors(){return this._isOverriddenModelMultiplyColors}getOverwriteFlagForModelScreenColors(){return CubismLogWarning("getOverwriteFlagForModelScreenColors() is a deprecated function. Please use getOverrideFlagForModelScreenColors()."),this.getOverrideFlagForModelScreenColors()}getOverrideFlagForModelScreenColors(){return this._isOverriddenModelScreenColors}setOverwriteFlagForModelMultiplyColors(e){CubismLogWarning("setOverwriteFlagForModelMultiplyColors(value: boolean) is a deprecated function. Please use setOverrideFlagForModelMultiplyColors(value: boolean)."),this.setOverrideFlagForModelMultiplyColors(e)}setOverrideFlagForModelMultiplyColors(e){this._isOverriddenModelMultiplyColors=e}setOverwriteFlagForModelScreenColors(e){CubismLogWarning("setOverwriteFlagForModelScreenColors(value: boolean) is a deprecated function. Please use setOverrideFlagForModelScreenColors(value: boolean)."),this.setOverrideFlagForModelScreenColors(e)}setOverrideFlagForModelScreenColors(e){this._isOverriddenModelScreenColors=e}getOverwriteFlagForDrawableMultiplyColors(e){return CubismLogWarning("getOverwriteFlagForDrawableMultiplyColors(drawableindex: number) is a deprecated function. Please use getOverrideFlagForDrawableMultiplyColors(drawableindex: number)."),this.getOverrideFlagForDrawableMultiplyColors(e)}getOverrideFlagForDrawableMultiplyColors(e){return this._userMultiplyColors.at(e).isOverridden}getOverwriteFlagForDrawableScreenColors(e){return CubismLogWarning("getOverwriteFlagForDrawableScreenColors(drawableindex: number) is a deprecated function. Please use getOverrideFlagForDrawableScreenColors(drawableindex: number)."),this.getOverrideFlagForDrawableScreenColors(e)}getOverrideFlagForDrawableScreenColors(e){return this._userScreenColors.at(e).isOverridden}setOverwriteFlagForDrawableMultiplyColors(e,r){CubismLogWarning("setOverwriteFlagForDrawableMultiplyColors(drawableindex: number, value: boolean) is a deprecated function. Please use setOverrideFlagForDrawableMultiplyColors(drawableindex: number, value: boolean)."),this.setOverrideFlagForDrawableMultiplyColors(e,r)}setOverrideFlagForDrawableMultiplyColors(e,r){this._userMultiplyColors.at(e).isOverridden=r}setOverwriteFlagForDrawableScreenColors(e,r){CubismLogWarning("setOverwriteFlagForDrawableScreenColors(drawableindex: number, value: boolean) is a deprecated function. Please use setOverrideFlagForDrawableScreenColors(drawableindex: number, value: boolean)."),this.setOverrideFlagForDrawableScreenColors(e,r)}setOverrideFlagForDrawableScreenColors(e,r){this._userScreenColors.at(e).isOverridden=r}getOverwriteColorForPartMultiplyColors(e){return CubismLogWarning("getOverwriteColorForPartMultiplyColors(partIndex: number) is a deprecated function. Please use getOverrideColorForPartMultiplyColors(partIndex: number)."),this.getOverrideColorForPartMultiplyColors(e)}getOverrideColorForPartMultiplyColors(e){return this._userPartMultiplyColors.at(e).isOverridden}getOverwriteColorForPartScreenColors(e){return CubismLogWarning("getOverwriteColorForPartScreenColors(partIndex: number) is a deprecated function. Please use getOverrideColorForPartScreenColors(partIndex: number)."),this.getOverrideColorForPartScreenColors(e)}getOverrideColorForPartScreenColors(e){return this._userPartScreenColors.at(e).isOverridden}setOverwriteColorForPartColors(e,r,t,a){CubismLogWarning("setOverwriteColorForPartColors(partIndex: number, value: boolean, partColors: csmVector<PartColorData>, drawableColors: csmVector<DrawableColorData>) is a deprecated function. Please use setOverrideColorForPartColors(partIndex: number, value: boolean, partColors: csmVector<PartColorData>, drawableColors: csmVector<DrawableColorData>)."),this.setOverrideColorForPartColors(e,r,t,a)}setOverrideColorForPartColors(r,t,a,s){a.at(r).isOverridden=t;for(let e=0;e<this._partChildDrawables.at(r).getSize();++e){var i=this._partChildDrawables.at(r).at(e);(s.at(i).isOverridden=t)&&(s.at(i).color.r=a.at(r).color.r,s.at(i).color.g=a.at(r).color.g,s.at(i).color.b=a.at(r).color.b,s.at(i).color.a=a.at(r).color.a)}}setOverwriteColorForPartMultiplyColors(e,r){CubismLogWarning("setOverwriteColorForPartMultiplyColors(partIndex: number, value: boolean) is a deprecated function. Please use setOverrideColorForPartMultiplyColors(partIndex: number, value: boolean)."),this.setOverrideColorForPartMultiplyColors(e,r)}setOverrideColorForPartMultiplyColors(e,r){this._userPartMultiplyColors.at(e).isOverridden=r,this.setOverrideColorForPartColors(e,r,this._userPartMultiplyColors,this._userMultiplyColors)}setOverwriteColorForPartScreenColors(e,r){CubismLogWarning("setOverwriteColorForPartScreenColors(partIndex: number, value: boolean) is a deprecated function. Please use setOverrideColorForPartScreenColors(partIndex: number, value: boolean)."),this.setOverrideColorForPartScreenColors(e,r)}setOverrideColorForPartScreenColors(e,r){this._userPartScreenColors.at(e).isOverridden=r,this.setOverrideColorForPartColors(e,r,this._userPartScreenColors,this._userScreenColors)}getDrawableCulling(e){var r;return this.getOverrideFlagForModelCullings()||this.getOverrideFlagForDrawableCullings(e)?this._userCullings.at(e).isCulling:(r=this._model.drawables.constantFlags,!Live2DCubismCore.Utils.hasIsDoubleSidedBit(r[e]))}setDrawableCulling(e,r){this._userCullings.at(e).isCulling=r}getOverwriteFlagForModelCullings(){return CubismLogWarning("getOverwriteFlagForModelCullings() is a deprecated function. Please use getOverrideFlagForModelCullings()."),this.getOverrideFlagForModelCullings()}getOverrideFlagForModelCullings(){return this._isOverriddenCullings}setOverwriteFlagForModelCullings(e){CubismLogWarning("setOverwriteFlagForModelCullings(isOverriddenCullings: boolean) is a deprecated function. Please use setOverrideFlagForModelCullings(isOverriddenCullings: boolean)."),this.setOverrideFlagForModelCullings(e)}setOverrideFlagForModelCullings(e){this._isOverriddenCullings=e}getOverwriteFlagForDrawableCullings(e){return CubismLogWarning("getOverwriteFlagForDrawableCullings(drawableIndex: number) is a deprecated function. Please use getOverrideFlagForDrawableCullings(drawableIndex: number)."),this.getOverrideFlagForDrawableCullings(e)}getOverrideFlagForDrawableCullings(e){return this._userCullings.at(e).isOverridden}setOverwriteFlagForDrawableCullings(e,r){CubismLogWarning("setOverwriteFlagForDrawableCullings(drawableIndex: number, isOverriddenCullings: boolean) is a deprecated function. Please use setOverrideFlagForDrawableCullings(drawableIndex: number, isOverriddenCullings: boolean)."),this.setOverrideFlagForDrawableCullings(e,r)}setOverrideFlagForDrawableCullings(e,r){this._userCullings.at(e).isOverridden=r}getModelOapcity(){return this._modelOpacity}setModelOapcity(e){this._modelOpacity=e}getModel(){return this._model}getPartIndex(e){let r;var t=this._model.parts.count;for(r=0;r<t;++r)if(e==this._partIds.at(r))return r;return this._notExistPartId.isExist(e)?this._notExistPartId.getValue(e):(r=t+this._notExistPartId.getSize(),this._notExistPartId.setValue(e,r),this._notExistPartOpacities.appendKey(r),r)}getPartId(e){e=this._model.parts.ids[e];return CubismFramework.getIdManager().getId(e)}getPartCount(){return this._model.parts.count}getPartParentPartIndices(){return this._model.parts.parentIndices}setPartOpacityByIndex(e,r){this._notExistPartOpacities.isExist(e)?this._notExistPartOpacities.setValue(e,r):(CSM_ASSERT(0<=e&&e<this.getPartCount()),this._partOpacities[e]=r)}setPartOpacityById(e,r){e=this.getPartIndex(e);e<0||this.setPartOpacityByIndex(e,r)}getPartOpacityByIndex(e){return this._notExistPartOpacities.isExist(e)?this._notExistPartOpacities.getValue(e):(CSM_ASSERT(0<=e&&e<this.getPartCount()),this._partOpacities[e])}getPartOpacityById(e){e=this.getPartIndex(e);return e<0?0:this.getPartOpacityByIndex(e)}getParameterIndex(e){let r;var t=this._model.parameters.count;for(r=0;r<t;++r)if(e==this._parameterIds.at(r))return r;return this._notExistParameterId.isExist(e)?this._notExistParameterId.getValue(e):(r=this._model.parameters.count+this._notExistParameterId.getSize(),this._notExistParameterId.setValue(e,r),this._notExistParameterValues.appendKey(r),r)}getParameterCount(){return this._model.parameters.count}getParameterType(e){return this._model.parameters.types[e]}getParameterMaximumValue(e){return this._model.parameters.maximumValues[e]}getParameterMinimumValue(e){return this._model.parameters.minimumValues[e]}getParameterDefaultValue(e){return this._model.parameters.defaultValues[e]}getParameterId(e){return CubismFramework.getIdManager().getId(this._model.parameters.ids[e])}getParameterValueByIndex(e){return this._notExistParameterValues.isExist(e)?this._notExistParameterValues.getValue(e):(CSM_ASSERT(0<=e&&e<this.getParameterCount()),this._parameterValues[e])}getParameterValueById(e){e=this.getParameterIndex(e);return this.getParameterValueByIndex(e)}setParameterValueByIndex(e,r,t=1){this._notExistParameterValues.isExist(e)?this._notExistParameterValues.setValue(e,1==t?r:this._notExistParameterValues.getValue(e)*(1-t)+r*t):(CSM_ASSERT(0<=e&&e<this.getParameterCount()),r=this.isRepeat(e)?this.getParameterRepeatValue(e,r):this.getParameterClampValue(e,r),this._parameterValues[e]=1==t?r:this._parameterValues[e]=this._parameterValues[e]*(1-t)+r*t)}setParameterValueById(e,r,t=1){e=this.getParameterIndex(e);this.setParameterValueByIndex(e,r,t)}addParameterValueByIndex(e,r,t=1){this.setParameterValueByIndex(e,this.getParameterValueByIndex(e)+r*t)}addParameterValueById(e,r,t=1){e=this.getParameterIndex(e);this.addParameterValueByIndex(e,r,t)}isRepeat(e){if(this._notExistParameterValues.isExist(e))return!1;CSM_ASSERT(0<=e&&e<this.getParameterCount());let r;return r=this._isOverriddenParameterRepeat||this._userParameterRepeatDataList.at(e).isOverridden?this._userParameterRepeatDataList.at(e).isParameterRepeated:0!=this._model.parameters.repeats[e]}getParameterRepeatValue(e,r){var t,a,s;return this._notExistParameterValues.isExist(e)||(CSM_ASSERT(0<=e&&e<this.getParameterCount()),a=(t=this._model.parameters.maximumValues[e])-(e=this._model.parameters.minimumValues[e]),t<r&&(s=CubismMath.mod(r-t,a),r=Number.isNaN(s)?t:e+s),r<e&&(s=CubismMath.mod(e-r,a),r=Number.isNaN(s)?e:t-s)),r}getParameterClampValue(e,r){if(this._notExistParameterValues.isExist(e))return r;CSM_ASSERT(0<=e&&e<this.getParameterCount());var t=this._model.parameters.maximumValues[e],e=this._model.parameters.minimumValues[e];return CubismMath.clamp(r,e,t)}getParameterRepeats(e){return 0!=this._model.parameters.repeats[e]}multiplyParameterValueById(e,r,t=1){e=this.getParameterIndex(e);this.multiplyParameterValueByIndex(e,r,t)}multiplyParameterValueByIndex(e,r,t=1){this.setParameterValueByIndex(e,this.getParameterValueByIndex(e)*(1+(r-1)*t))}getDrawableIndex(r){var t=this._model.drawables.count;for(let e=0;e<t;++e)if(this._drawableIds.at(e)==r)return e;return-1}getDrawableCount(){return this._model.drawables.count}getDrawableId(e){var r=this._model.drawables.ids;return CubismFramework.getIdManager().getId(r[e])}getDrawableRenderOrders(){return this._model.drawables.renderOrders}getDrawableTextureIndices(e){return this.getDrawableTextureIndex(e)}getDrawableTextureIndex(e){return this._model.drawables.textureIndices[e]}getDrawableDynamicFlagVertexPositionsDidChange(e){var r=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(r[e])}getDrawableVertexIndexCount(e){return this._model.drawables.indexCounts[e]}getDrawableVertexCount(e){return this._model.drawables.vertexCounts[e]}getDrawableVertices(e){return this.getDrawableVertexPositions(e)}getDrawableVertexIndices(e){return this._model.drawables.indices[e]}getDrawableVertexPositions(e){return this._model.drawables.vertexPositions[e]}getDrawableVertexUvs(e){return this._model.drawables.vertexUvs[e]}getDrawableOpacity(e){return this._model.drawables.opacities[e]}getDrawableMultiplyColor(e){var r=this._model.drawables.multiplyColors,e=4*e,t=new CubismTextureColor;return t.r=r[e],t.g=r[1+e],t.b=r[2+e],t.a=r[3+e],t}getDrawableScreenColor(e){var r=this._model.drawables.screenColors,e=4*e,t=new CubismTextureColor;return t.r=r[e],t.g=r[1+e],t.b=r[2+e],t.a=r[3+e],t}getDrawableParentPartIndex(e){return this._model.drawables.parentPartIndices[e]}getDrawableBlendMode(e){var r=this._model.drawables.constantFlags;return Live2DCubismCore.Utils.hasBlendAdditiveBit(r[e])?CubismBlendMode.CubismBlendMode_Additive:Live2DCubismCore.Utils.hasBlendMultiplicativeBit(r[e])?CubismBlendMode.CubismBlendMode_Multiplicative:CubismBlendMode.CubismBlendMode_Normal}getDrawableInvertedMaskBit(e){var r=this._model.drawables.constantFlags;return Live2DCubismCore.Utils.hasIsInvertedMaskBit(r[e])}getDrawableMasks(){return this._model.drawables.masks}getDrawableMaskCounts(){return this._model.drawables.maskCounts}isUsingMasking(){for(let e=0;e<this._model.drawables.count;++e)if(!(this._model.drawables.maskCounts[e]<=0))return!0;return!1}getDrawableDynamicFlagIsVisible(e){var r=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasIsVisibleBit(r[e])}getDrawableDynamicFlagVisibilityDidChange(e){var r=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(r[e])}getDrawableDynamicFlagOpacityDidChange(e){var r=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasOpacityDidChangeBit(r[e])}getDrawableDynamicFlagRenderOrderDidChange(e){var r=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(r[e])}getDrawableDynamicFlagBlendColorDidChange(e){var r=this._model.drawables.dynamicFlags;return Live2DCubismCore.Utils.hasBlendColorDidChangeBit(r[e])}loadParameters(){let r=this._model.parameters.count;var e=this._savedParameters.getSize();r>e&&(r=e);for(let e=0;e<r;++e)this._parameterValues[e]=this._savedParameters.at(e)}initialize(){CSM_ASSERT(this._model),this._parameterValues=this._model.parameters.values,this._partOpacities=this._model.parts.opacities,this._parameterMaximumValues=this._model.parameters.maximumValues,this._parameterMinimumValues=this._model.parameters.minimumValues;var r=this._model.parameters.ids,t=this._model.parameters.count;this._parameterIds.prepareCapacity(t),this._userParameterRepeatDataList.prepareCapacity(t);for(let e=0;e<t;++e)this._parameterIds.pushBack(CubismFramework.getIdManager().getId(r[e])),this._userParameterRepeatDataList.pushBack(new ParameterRepeatData(!1,!1));var a=this._model.parts.count,s=this._model.parts.ids;this._partIds.prepareCapacity(a);for(let e=0;e<a;++e)this._partIds.pushBack(CubismFramework.getIdManager().getId(s[e]));this._userPartMultiplyColors.prepareCapacity(a),this._userPartScreenColors.prepareCapacity(a),this._partChildDrawables.prepareCapacity(a);var i=this._model.drawables.ids,l=this._model.drawables.count,o=(this._userMultiplyColors.prepareCapacity(l),this._userScreenColors.prepareCapacity(l),this._userCullings.prepareCapacity(l),new DrawableCullingData(!1,!1));for(let e=0;e<a;++e){var n=new CubismTextureColor(1,1,1,1),u=new CubismTextureColor(0,0,0,1),n=new PartColorData(!1,n),u=new PartColorData(!1,u);this._userPartMultiplyColors.pushBack(n),this._userPartScreenColors.pushBack(u),this._partChildDrawables.pushBack(new csmVector),this._partChildDrawables.at(e).prepareCapacity(l)}for(let e=0;e<l;++e){var d=new CubismTextureColor(1,1,1,1),m=new CubismTextureColor(0,0,0,1),d=new DrawableColorData(!1,d),m=new DrawableColorData(!1,m),d=(this._drawableIds.pushBack(CubismFramework.getIdManager().getId(i[e])),this._userMultiplyColors.pushBack(d),this._userScreenColors.pushBack(m),this._userCullings.pushBack(o),this.getDrawableParentPartIndex(e));0<=d&&this._partChildDrawables.at(d).pushBack(e)}}constructor(e){this._model=e,this._parameterValues=null,this._parameterMaximumValues=null,this._parameterMinimumValues=null,this._partOpacities=null,this._savedParameters=new csmVector,this._parameterIds=new csmVector,this._drawableIds=new csmVector,this._partIds=new csmVector,this._isOverriddenParameterRepeat=!0,this._isOverriddenModelMultiplyColors=!1,this._isOverriddenModelScreenColors=!1,this._isOverriddenCullings=!1,this._modelOpacity=1,this._userParameterRepeatDataList=new csmVector,this._userMultiplyColors=new csmVector,this._userScreenColors=new csmVector,this._userCullings=new csmVector,this._userPartMultiplyColors=new csmVector,this._userPartScreenColors=new csmVector,this._partChildDrawables=new csmVector,this._notExistPartId=new csmMap,this._notExistParameterId=new csmMap,this._notExistParameterValues=new csmMap,this._notExistPartOpacities=new csmMap}release(){this._model.release(),this._model=null}}import*as $ from"./cubismmodel";var Live2DCubismFramework;(Live2DCubismFramework=Live2DCubismFramework||{}).CubismModel=$.CubismModel;export{ParameterRepeatData,DrawableColorData,PartColorData,DrawableCullingData,CubismModel,Live2DCubismFramework};