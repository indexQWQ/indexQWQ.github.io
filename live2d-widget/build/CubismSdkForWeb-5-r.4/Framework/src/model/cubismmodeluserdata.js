import{CubismFramework}from"../live2dcubismframework";import{csmString}from"../type/csmstring";import{csmVector}from"../type/csmvector";import{CubismModelUserDataJson}from"./cubismmodeluserdatajson";let ArtMesh="ArtMesh";class CubismModelUserDataNode{}class CubismModelUserData{static create(e,s){var a=new CubismModelUserData;return a.parseUserData(e,s),a}static delete(e){null!=e&&e.release()}getArtMeshUserDatas(){return this._artMeshUserDataNode}parseUserData(e,s){let a=new CubismModelUserDataJson(e,s);if(a){var r=CubismFramework.getIdManager().getId(ArtMesh),t=a.getUserDataCount();for(let e=0;e<t;e++){var o=new CubismModelUserDataNode;o.targetId=a.getUserDataId(e),o.targetType=CubismFramework.getIdManager().getId(a.getUserDataTargetType(e)),o.value=new csmString(a.getUserDataValue(e)),this._userDataNodes.pushBack(o),o.targetType==r&&this._artMeshUserDataNode.pushBack(o)}}a.release(),a=void 0}constructor(){this._userDataNodes=new csmVector,this._artMeshUserDataNode=new csmVector}release(){for(let e=0;e<this._userDataNodes.getSize();++e)this._userDataNodes.set(e,null);this._userDataNodes=null}}import*as $ from"./cubismmodeluserdata";var Live2DCubismFramework;(e=>{e.CubismModelUserData=$.CubismModelUserData,e.CubismModelUserDataNode=$.CubismModelUserDataNode})(Live2DCubismFramework=Live2DCubismFramework||{});export{CubismModelUserDataNode,CubismModelUserData,Live2DCubismFramework};