import{Live2DFramework}from"./Live2DFramework.js";import LAppModel from"./LAppModel.js";import PlatformManager from"./PlatformManager.js";import LAppDefine from"./LAppDefine.js";import logger from"../logger.js";class LAppLive2DManager{constructor(){this.model=null,this.reloading=!1,Live2D.init(),Live2DFramework.setPlatformManager(new PlatformManager)}getModel(){return this.model}releaseModel(e){this.model&&(this.model.release(e),this.model=null)}async changeModel(i,a){return new Promise((o,e)=>{if(!this.reloading){this.reloading=!0;let e=this.model,t=new LAppModel;t.load(i,a,()=>{e&&e.release(i),this.model=t,this.reloading=!1,o()})}})}async changeModelWithJSON(e,t,o){var i,a;this.reloading||(this.reloading=!0,i=this.model,await(a=new LAppModel).loadModelSetting(t,o),i&&i.release(e),this.model=a,this.reloading=!1)}setDrag(e,t){this.model&&this.model.setDrag(e,t)}maxScaleEvent(){logger.trace("Max scale event."),this.model&&this.model.startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_IN,LAppDefine.PRIORITY_NORMAL)}minScaleEvent(){logger.trace("Min scale event."),this.model&&this.model.startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_OUT,LAppDefine.PRIORITY_NORMAL)}tapEvent(e,t){return logger.trace("tapEvent view x:"+e+" y:"+t),!!this.model&&(this.model.hitTest(LAppDefine.HIT_AREA_HEAD,e,t)?(logger.trace("Tap face."),this.model.setRandomExpression()):this.model.hitTest(LAppDefine.HIT_AREA_BODY,e,t)&&(logger.trace("Tap body."),this.model.startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY,LAppDefine.PRIORITY_NORMAL)),!0)}}export default LAppLive2DManager;